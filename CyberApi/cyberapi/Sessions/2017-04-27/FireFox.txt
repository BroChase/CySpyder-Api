[{"uri": "https://krebsonsecurity.com/2010/06/security-updates-for-firefox-opera-browsers/", "date": "2010-06-23T00:00:00.000Z", "author": "Brian Krebs", "title": "Security Updates for Firefox, Opera Browsers", "body": "Mozilla has shipped a new version of Firefox that corrects a number of vulnerabilities in the\nbrowser. Separately, a new version of Opera is available that fixes at least five security flaws in\nthe software.\n\nFirefox version 3.6.4 addresses seven security holes ranging from lesser bugs to critical flaws.\nMozilla says this latest version of Firefox also does a better job of handling plugin crashes, so\nthat if a plugin causes problems when the user browses a site, Firefox will simply let the plugin\ncrash instead of tying up the entire browser process. Firefox should auto-update (usually on your\nnext restart of the browser), but you can force an update check by clicking \u201cHelp,\u201d and then \u201cCheck\nfor Updates\u201d (when I did this, I noticed that in its place was the \u201cApply Downloaded Update Now,\u201d\noption, indicating that Firefox had already fetched this upgrade.\n\nMozilla also shipped, 3.5.10, an update that fixes at least nine security vulnerabilities in its\n3.5.x line of Firefox. The software maker will only continue to support this version of Firefox for\nanother couple of months, so if you\u2019re on the 3.5.x line, you might consider upgrading soon (don\u2019t\nknow which version you\u2019re using, click \u201cHelp\u201d and \u201cAbout Mozilla Firefox\u201d).\n\nOpera\u2019s update brings the browser to version 10.54, which corrects a few critical vulnerabilities.\nOpera now includes an auto-update feature, so Opera users may already have been notified about this\nupdate (I wasn\u2019t). In any case, Opera is urging users to upgrade to the latest version, available\nhere.\n\n", "polarity": 0.08459595959595961, "subjectivity": 0.5134018759018759, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-47-fixes-13-vulnerabilities-removes-click-to-activate-plugin-whitelist/118544/", "date": "2016-06-08T00:00:00.000Z", "author": "Chris Brook", "title": "Firefox 47 Fixes 13 Vulnerabilities, Removes Click-To-Activate Plugin Whitelist", "body": "Mozilla fixed\u00a013 security\u00a0issues, including two critical vulnerabilities that could have led to\nspoofing and clickjacking, among other issues, when it updated Firefox to the latest build, Firefox\n47, this week. \n\nOne of the issues, a buffer overflow, could have resulted in a potentially exploitable crash\naccording to an advisory published by the company on Tuesday. According a security researcher that\ngoes by the handle firehack, the\u00a0overflow could have popped up\u00a0when the browser\u00a0parsed HTML5\nfragments in a foreign context. When a fragment was inserted into an existing document, it could\u2019ve\ncrashed the browser. \n\nThe second critical issue corresponds to not one, but several memory safety bugs reported by 14\ndifferent Mozilla developers and community members. The details of the bugs weren\u2019t revealed, but\naccording to the advisory the likeliness that some could be exploited to run arbitrary code was high\nenough that it warranted fixing. \n\nA handful of vulnerabilities branded high by the company were also fixed in Firefox this week,\nincluding two out-of-bounds write vulnerabilities and two use-after-free vulnerabilities. If\nexploited they could lead to privilege escalation, a potential crash, and persistent denial of\nservice attacks, to name a few outcomes. In addition to the DoS attack, an attacker would be\u00a0able\nto\u00a0manipulate pointerlock, a web API, so that it could lead to spoofing and clickjacking attacks,\nMozilla warns. \n\nFirefox 47\u00a0also switches all NPAPI plugins, other than Flash, to click-to-activate by default. \n\nThe whitelist plugin has been expired in the eyes of Mozilla developers for a while now. Mozilla\npreviously announced plans to completely remove support for NPAPI plugins in Firefox by the end of\n2016. This week\u2019s move should preemptively\u00a0help thwart attackers who have increasingly preyed on\nplugin exploits. Benjamin Smedberg, an Engineering Manager at Mozilla rationalized a few months ago\nthat there would be a minority of users affected by the move, but the bulk of the plugins are\nneither used nor relevant. Either way, users should still be able to activate them manually. \n\nFor the most part, plugins have remained a steady source of performance problems, crashes, and\nsecurity incidents for users, regardless of the browser.\u00a0Google\u2019s Chrome browser and Microsoft\u2019s\nEdge browser have already removed support for legacy plugins over the past year. \n\nThe latest Firefox update also brings a handful of aesthetic changes to the browser, including\nimprovements to YouTube playback, a sidebar for synced tabs, and a number of web platform\nchanges.\u00a0The update\u00a0can be applied\u00a0either through Firefox\u2019s update mechanism, through Firefox.com.\nSome Android users who\u00a0update Firefox through Google Play will be doing so for the last time.\nMozilla previously announced that\u00a0Firefox 47 is\u00a0the last version Android Gingerbread it will\nsupport. \n\n", "polarity": 0.07188172043010753, "subjectivity": 0.4490860215053763, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-45-fixes-40-vulnerabilities-22-critical/116682/", "date": "2016-03-09T00:00:00.000Z", "author": "Chris Brook", "title": "Firefox 45 Fixes 40 Vulnerabilities, 22 Critical", "body": "Much like Google, which updated Chrome yesterday, Mozilla released a new version of Firefox on\nTuesday, fixing 40 vulnerabilities in\u00a0the browser. \n\nThe update, Firefox 45, included eight bulletins rated critical and patched a handful of\nserious\u00a0use-after-free vulnerabilities and a pair of buffer overflow vulnerabilities. \n\nThe lion\u2019s share of the bugs, 14, were in the font-processing library, Graphite 2. Before it was\nfixed, a malicious Graphite font, coupled with a combination of uninitialized memory errors, out-of-\nbounds read errors, and out-of-bounds write errors, could\u2019ve led to a exploitable crash if loaded. \n\nThe use-after-free bugs existed in the browser\u2019s HTML5 string parser, WebRTC, XML, and SetBody\nfunction. All could have led to potentially exploitable crashes, according to advisories published\nby Mozilla\u2019s security team Tuesday. \n\nAnother vulnerability, a heap-based buffer overflow existed in the Network Security Services (NSS)\nlibraries. An attacker could have created a certificate that when parsed by NSS, would\u2019ve prompted\nthe library to crash or execute arbitrary code with the permissions of the user. As a result Mozilla\nis urging users to not only update to Firefox 45 to solve the issue, but encouraging anyone who\u2019s\ncoordinating projects running NSS 3.21 to upgrade to NSS 3.21.1. \n\nThe update also remedies miscellaneous memory safety hazards, memory leaks, and a address bar\nspoofing issue. \n\nThe address bar spoofing issue is interesting because before the update, a user could navigate from\none malicious page to another, but once they navigated back to the initial page, the URL bar\nwouldn\u2019t reflect the reloaded page. \n\n\u201cThis could be used to trick users into potentially treating the page as a different and trusted\nsite,\u201d Mozilla warns. \n\nAside from bug fixes, Mozilla claims the update also discontinues some of the browsers\u2019 lesser-used\nfunctionalities. The company has decided to do away with Tab Groups, a feature that let users group\ntabs together and disable older and \u201crarely used\u201d Android versions (3.0 to 3.2.6, Honeycomb). \n\n", "polarity": 0.06464646464646465, "subjectivity": 0.5503030303030303, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-to-block-flash-in-august-disable-in-2017/119419/", "date": "2016-07-21T00:00:00.000Z", "author": "Chris Brook", "title": "Firefox to Block Flash in August, Disable in 2017", "body": "Starting next year, Firefox users who navigate to pages that contain Flash will be asked for their\nconsent before activating the plugin. The move, long expected, comes as developers seek to curb\nusage of Flash in everyday web browsing. \n\nBenjamin Smedberg, Manager of Firefox Quality Engineering at Mozilla, confirmed in a blog post on\nWednesday that the browser will also begin blocking non-essential Flash content next month, as\nanother step to making the\u00a0browser run more efficiently. \n\n\u201cThese and future changes will bring Firefox users enhanced security, improved battery life, faster\npage load, and better browser responsiveness,\u201d Smedberg said before acknowledging that\u00a0the\nproliferation of sites running HTML5 for video has led to a gradual decline in Firefox crashes over\nthe last year and a half. \n\n \n\nBy blocking specific Flash files, particularly invisible ones, Smedberg, claims Firefox should be\nable to reduce Flash crashes and hangs further \u2013 by up to 10 percent. To start, the company is\nplanning to block a select few types of Flash, mostly SWF files. \n\nFlash content that can be blocked without being noticeable to Firefox users, and Flash content where\nit\u2019s possible to replace the functionality with HTML will come next and are candidates for a\nblocklist on\u00a0Github Mozilla is maintaining. \n\nSmedberg urged any developers still using Flash or Silverlight for video or games to plan on\nadopting HTML5, if they haven\u2019t already planned on doing so. Smedberg also urged anyone using Flash\nto measure content viewability for advertising to consider shifting to a new API it plans on\nunveiling later this year. Flash content used in this fashion will be added to the blocklist around\nthe same time Mozilla deploys the API. \n\nMozilla switched all NPAPI plugins to click-to-activate last month when it pushed Firefox 47.\nMozilla previously announced plans to remove support for NPAPI plugins by the end of 2016 but\naccording to\u00a0Wednesday\u2019s blog post, it appears the company has opted to push the deadline back to\nMarch 2017. Around\u00a0next March is also when Firefox\u2019s next Extended Support Release,\u00a0should see a\nrelease. That build\u00a0will support Silverlight and Java until the beginning of 2018, Smedberg said, to\nhelp users who may need more time. \n\nGoogle first began pausing Flash ads in Chrome last year and announced in May that the browser would\nmove away from Flash and default to HTML5 in Q4 later this year. \n\nThe platform\u00a0has managed to remain a constant source of frustration for users and system admins\nalike, even as companies continue to distance themselves from it. Earlier this month, in one of its\nbiggest updates of the year, Adobe was forced to patch 52 vulnerabilities in the platform, most of\nwhich could lead to remote code execution. Attackers have kept pace; using a zero day vulnerability\nin Flash to spread ransomware in April and another in June to hit high-profile targets in Russia and\nAsia. \n\n", "polarity": 0.07215397215397215, "subjectivity": 0.2834561834561834, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "http://www.darkreading.com/vulnerabilities---threats/lastpass-fixes-serious-security-flaw-in-chrome-firefox-extensions/d/d-id/1328466", "date": "2017-03-23T00:00:00.000Z", "author": "Dark Reading Staff", "title": "LastPass Fixes Serious Security Flaw in Chrome, Firefox Extensions", "body": "Password manager LastPass has fixed a serious vulnerability in its browser extensions for Google\nChrome, Mozilla Firefox, and Microsoft Edge. The flaw was discovered by Google's Tavis Ormandy,\nreports Network World. It could have been exploited to access extensions' internal commands and\nsteal passwords or personal information.\n\nLastPass has put a workaround in place to provide protection from malicious codes and plans to fully\nfix the flaw in updated versions.\n\nOrmandy later reported another vulnerability in the Firefox extension, which LastPass said was\nlinked to the first. The problem was immediately fixed in a new version of the extension 4.1.36a\nreleased the next day.\n\n\"No password changes are required of users at this time,\" say LastPass developers.\n\nRead details on Network World.\n\n", "polarity": 0.028114478114478116, "subjectivity": 0.23939393939393938, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "http://www.darkreading.com/cloud/year-2016-sees-record-deployment-of-https-by-firefox-chrome-/d/d-id/1327790", "date": "2016-12-27T00:00:00.000Z", "author": "Dark Reading Staff", "title": "Year 2016 Sees Record Deployment Of HTTPS By Firefox, Chrome ", "body": "The year 2016 has seen a record of sorts in the history of HTTPS with most pages viewed on the Web\nand more than half of Web pages loaded by Firefox and Chrome guaranteeing secure browsing by turning\non HTTPS, reports digital rights group Electronic Frontier Foundation (EFF). HTTPS adoption is\nbecoming standard all over although most of east and southeast Asia are still lagging behind, EFF\nadds.\n\nIncrease in use of HTTPS is attributed to growing publicity, awareness about surveillance and web\nserver capability progress. More and more websites are now securing visitors by turning on HTTPS\nwith the help of Let\u2019s Encrypt which provided secure connection for more than 21 million sites this\nyear. The US government has also encouraged use of HTTPS but the crucial push, says EFF, has come\nfrom hosting services, including Wordpress.com, Shopify, Tumblr and OVH, which have made protected\nconnection a default for their sites.\n\nRead details at\u00a0EFF.\n\n", "polarity": 0.2630952380952381, "subjectivity": 0.494047619047619, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/google-fixes-unicode-phishing-vulnerability-in-chrome-58-firefox-standing-pat/125099/", "date": "2017-04-20T00:00:00.000Z", "author": "Chris Brook", "title": "Google Fixes Unicode Phishing Vulnerability in Chrome 58, Firefox Standing Pat", "body": "Google fixed a handful of issues when it released the latest version of its browser, Chrome 58, on\nWednesday, including a vulnerability that could have made it easier for\u00a0an attacker to carry out a\nphishing attack with Unicode domains. \n\nThe vulnerability, based on Punycode \u2013 a way to represent Unicode with foreign characters \u2013 has been\nmaking headlines since it was disclosed last Friday. Discovered by Chinese researcher Xudong Zheng,\nthe bug relies on tricking Chrome into bringing users to sites that appear legitimate. The sites\ncould then convince\u00a0victims to enter personal login or financial credentials. \n\nPhishing with Unicode Domains \u2013 https://t.co/bn9dMG0L1t \n\n\u2014 Xudong Zheng (@Xudong_Zheng) April 14, 2017 \n\n \n\nZheng claims he disclosed the bug to Google on January 20 and that it was incorporated into beta\nbuilds on March 24, before finally getting fixed on Wednesday. \n\nThe bug, considered medium severity, was one of 29 issues Google fixed on Wednesday. \n\nThree of the vulnerabilities were marked critical by Google, including a heap use after free in the\nbrowser\u2019s Print Preview feature, and a pair of type confusion bugs \u2013 one in PDFium, Google\u2019s open\nsource PDF software library, and another in Blink, Chromium\u2019s rendering engine. \n\nGoogle paid out $14,000 to researchers for their findings, a relatively modest sum after the company\npaid out nearly $55,000 in January for bugs in Chrome 56, and $38,000 in March for bugs in Chrome\n57. \n\nThe update came the same day that Mozilla pushed out a new version of its browser, Firefox 53 and\nFirefox ESR 52.1. \n\nMozilla fixed six critical bugs with the update, including a pair of out-of-bounds write\nvulnerabilities, a pair of use-after-free vulnerabilities, a buffer overflow, and an origin\nconfusion. If exploited, all of the bugs, except for the origin confusion flaw, could have resulted\nin a potentially exploitable crash. The origin confusion, which stemmed from reloading pages with\nredirects, could have only led to a cross-site scripting (XSS) attack. \n\nForty-one vulnerabilities were fixed with the update. Counting the nearly two dozen memory safety\nbugs fixed in the browser and ESR versions 45.9 and 52.1., 64 vulnerabilities were fixed with the\nupdate. \n\nZheng claims the same URL spoofing vulnerability that existed in Chrome also exists in Firefox, but\nit appears Mozilla is holding off fixing it for now. \n\nGervase Markham, a software engineer for the Mozilla Foundation, said earlier this week that Firefox\nusers should turn on the browser\u2019s Safe Browsing feature to help thwart phishing attacks like the\none uncovered by Zheng. Markham, who\u2019s also a lead developer of Bugzilla, said that if Mozilla were\nto start putting restrictions on scripts that happen to look like Latin, such as Cyrillic, it would\nbe \u201cmaking that script a second-class citizen because not as much can be represented using it.\u201d \n\nZheng\u2019s research relies on using Unicode characters, which can represent Cyrillic and Greek\nalphabets, to mimic Latin letters and in turn trick user\u2019s eyes. \n\n\u201cThere is no perfect solution to this problem,\u201d Markham wrote on Bugzilla Tuesday, \u201cHuman languages\nare messy, inconsistent, and wonderful. Different scripts have letters which clash with each other.\nIf you don\u2019t want to be attacked this way, buy a domain in a TLD which doesn\u2019t allow it. If your TLD\ndoes allow it, lobby your registry. In the mean time, Firefox users have Safe Browsing to protect\nthem from actual phishing attempts, whether they use IDN lookalikes or not.\u201d \n\nMozilla published a FAQ dubbed \u201cIDN Display Algorithm\u201d in response to the bug which Markham says\nclearly illustrates the organization\u2019s stance. \n\n\u201cYou may not agree with it, but it\u2019s our considered position, so please do not comment further here\nunless you have new information to add which you genuinely believe has not been considered,\u201d Markham\nwrote. \n\nZheng is encouraging Firefox users to limit their exposure to the bug by going to the browser\u2019s\nabout:config settings and setting network.IDN_show_punycode to true. By doing this Firefox will\nalways display IDN domains in its Punycode form, something that should make it easier to identify\nmalicious domains, the researcher claims. \n\n", "polarity": 0.08826581027667985, "subjectivity": 0.4488389328063241, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/07/comcast-hijacks-firefox-homepage-well-fix/", "date": "2011-07-21T00:00:00.000Z", "author": "Brian Krebs", "title": "Comcast Hijacks Firefox Homepage: \u201cWe\u2019ll Fix\u201d", "body": "Comcast says it is revamping the software that new customers need to install to start service with\nthe ISP. The software is unfriendly to Mac users running Firefox: It changes the browser\u2019s homepage\nto comcast.net, and blocks users from changing it to anything else.\n\nI heard this from a friend who\u2019d just signed up for Comcast\u2019s Xfinity high-speed Internet service\nand soon discovered some behavior on his Mac that is akin to Windows malware\u00a0 \u2014 something had\nhijacked his Internet settings. The technician who arrived to turn on the service said that a\nsoftware package from Comcast was necessary to complete the installation. My friend later discovered\nthat his homepage had been changed to comcast.net, and that Comcast software had modified his\nFirefox profile so that there was no way to change the homepage setting.\n\nI contacted Comcast; they initially blamed the problem on a bug in Firefox. Mozilla denies this, and\nsays it\u2019s Comcast\u2019s doing.\n\n\u201cThis is NOT a Firefox bug or issue,\u201d a Mozilla spokesperson wrote in an email. \u201cIt is a Comcast\nmethod that applies preference changes to Firefox.\u201d\n\nComcast spokesman Charlie Douglas acknowledged that the Xfinity software hijacks Firefox\u2019s settings.\nHe said the problem is limited to Mac users, and that permanency of the change was unintentional. He\nadded that the company is in the process of correcting the installation software.\n\n\u201cCustomers absolutely should be able to change their preferred homepage anytime,\u201d Douglas said.\n\u201cWe\u2019re obviously apologizing for any inconvenience we\u2019ve caused Mac users.\u201d\n\nFortunately, there is a stopgap fix for this problem. Blogger Ryan Parman has published step-by-step\ninstructions and screenshots showing how to remove the homepage hijack.\n\n", "polarity": 0.1264935064935065, "subjectivity": 0.47224025974025974, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/10/critical-fixes-for-shockwave-firefox/", "date": "2010-10-28T00:00:00.000Z", "author": "Brian Krebs", "title": "Critical Fixes for Shockwave, Firefox", "body": "Adobe Systems pushed out a critical security update for its Shockwave Player that fixes nearly a\ndozen security vulnerabilities.\u00a0 The software maker also is warning that attackers are targeting a\npreviously unidentified security hole in its Acrobat and PDF Reader products.\n\nThe Shockwave patch plugs 11 security holes in program, most of which attackers could use remotely\nto take control over an affected system.\u00a0 Updates are available for Mac and Windows computers, from\nthis link. The latest version is 11.5.9.615.\u00a0 Before you blithely click through the process, keep a\nlookout for pre-checked \u201cfree\u201d software that will install alongside this Shockwave update if you\nsimply accept all the default options. When I tested the Shockwave installer, it included a \u201cfree PC\nperformance scan from PC Tools\u2019s Registry Mechanic. I opted to untick the check mark next to that\noption before proceeding with the rest of the install, which was otherwise uneventful.\n\nDue to Adobe\u2019s huge market share and apparent abundance of as-yet-undiscovered security holes, life\nwith Adobe\u2019s products can feel a bit like playing Whac-a-Mole: Just when you\u2019ve patched one Adobe\nproduct it seems like there\u2019s another one under assault by attackers. True to form, Adobe released a\nseparate advisory today warning that hackers were targeting a critical flaw in the latest version of\nits Acrobat and PDF Reader products.\n\nAdobe says the Acrobat/Reader vulnerability could cause a crash and potentially  allow an attacker\nto take control of the affected computer, and that there are  reports that this vulnerability is\nbeing actively exploited in the wild  against Adobe Reader and Acrobat 9.x. The flaw also exists in\nubiquitous Adobe\u2019s Flash Player, although the company said it is not currently aware of  attacks\ntargeting the latest version of Flash (v. 10.1.85.3).\n\nEven so, Adobe plans to fix the issue in Flash before tackling it in Reader and Acrobat. The company\nsays it plans to issue a fix for the bug in Flash by Nov. 9, 2010, but that it doesn\u2019t expect to\nrelease an update to clobber the problem on Acrobat/Reader until the following week.\n\nIn other patch news, Mozilla has released an update that fixes a critical flaw that security experts\nwarned this week was being used to attack Firefox users. Chances are good that your copy of Firefox\n(assuming it is semi-recent) has already downloaded this update, which brings Firefox to version\n3.6.12 If you haven\u2019t already been prompted to restart Firefox, click \u201cHelp\u201d in the menu bar on top\nand look for an item that says \u201cApply Downloaded Update Now.\u201d Otherwise, it\u2019s available from\nMozilla\u2019s home page.\n\n", "polarity": 0.17946428571428572, "subjectivity": 0.5437074829931973, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/10/nobel-peace-prize-site-serves-firefox-0day/", "date": "2010-10-26T00:00:00.000Z", "author": "Brian Krebs", "title": "Nobel Peace Prize Site Serves Firefox 0day", "body": "The Web site for the Nobel Peace Prize has been serving up malicious software that takes advantage\nof a newly-discovered security hole in Mozilla Firefox, computer security experts warned today.\n\nOslo-based Norman ASA warned that visitors who browsed the Nobel Prize site with Firefox while the\nattack was active early Tuesday may have had malicious software silently installed on their\ncomputers without warning.\n\nMozilla just posted a blog entry saying it is aware of a critical vulnerability in Firefox 3.5 and\n3.6, and that it has received reports from several security research firms that exploit code\nleveraging this vulnerability has been detected in the wild. The software firm isn\u2019t saying much\nmore about the flaw for now.\n\nMozilla says it is developing a fix, which it plans to deploy as soon as it has been tested. In the\nmeantime, Firefox users can mitigate the threat from this flaw by using a script-blocking add-on\nlike NoScript.\n\nUpdate, 6:40 p.m. ET: I just heard back from Norman ASA malware analyst Snorre Fagerland via e-mail,\nand he has provided a bit more technical analysis of what\u2019s going on with this Firefox flaw and with\nthe exploit they discovered. Fagerland says the vulnerability is related to a \u201cuse-after-free\ncondition\u201d in certain objects, exploited through Javascript.\n\n\u201cShellcode and a large heapspray is involved,\u201d Fagerland wrote. \u201cThe script that does this checks\nfor the following versions:\n\nfirefox/3.6.8 firefox/3.6.9 firefox/3.6.10 firefox/3.6.11\n\n\u2026and it checks that it is NOT running Vista or Win7 (Windows versions 6.0 and 6.1), pretty much\nlimiting the attack to XP-family OS\u2019s. The underlying vulnerability is confirmed to also affect\nFirefox 3.5x series, but we have not seen exploit code that attacks this.\u201d\n\nUpdate, Oct. 27, 11:50 p.m. ET: Mozilla has opened up the bug report on this flaw.\n\n", "polarity": 0.12606516290726816, "subjectivity": 0.4026315789473684, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/04/mozilla-disables-insecure-java-plugin-in-firefox/", "date": "2010-04-20T00:00:00.000Z", "author": "Brian Krebs", "title": "Mozilla Disables Insecure Java Plugin in Firefox", "body": "Mozilla is disabling older versions of the Java Deployment Toolkit plugin for Firefox users, in a\nbid to block attacks against a newly-discovered Java security hole that attackers have been\nexploiting of late to install malicious code.\n\nOn April 15, Oracle Corp. pushed out an update to its Java software to fix a dangerous security flaw\nin the program. The patch came just a day after it became clear that criminals were using the flaw\nto break into vulnerable systems.\n\nJava installs a Java Deployment Toolkit plugin into Internet Explorer and Mozilla browsers.\nAccording to comments in the Firefox bug database entry for this issue, Mozilla developers began\ndiscussing the forced removal of the plugin days before Oracle pushed the Java update. Even after\nthe Java patch shipped, the developers apparently were concerned that the Oracle update didn\u2019t fix\nthe exploit for all Firefox users. An advisory from the U.S. Computer Emergency Readiness Team\nsupported that finding (US-CERT says the fixed version of the plugin is 6.0.200.2).\n\nThere was another problem: Oracle\u2019s patch, which brings the software to Java 6 Update 20, in some\ncases leaves behind older, vulnerable versions of the Firefox plugin (the Java update application\nseems to have updated the associated plugin for Internet Explorer just fine).\n\nIndeed, even if you took my advice and uninstalled Java from your computer, this stubborn add-on may\nstill be hanging around in Firefox. And you\u2019ll probably at some point see a prompt like the one\nabove, if you haven\u2019t already. If you want to disable it manually, go to Tools, Add-ons, click the\nPlugins icon, select the Toolkit and hit the \u201cDisable\u201d button.\n\nNot everyone is happy with Mozilla\u2019s decision to kill this add-on, at least judging from comments\n#31 and 33 in the Mozilla bug database.\n\n", "polarity": -0.07333333333333332, "subjectivity": 0.4666666666666667, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-patches-pwn2own-zero-day-in-firefox/124415/", "date": "2017-03-20T00:00:00.000Z", "author": "Chris Brook", "title": "Mozilla Patches Pwn2Own Zero Day in Firefox", "body": "Mozilla was quick to patch a zero day vulnerability identified in the Firefox browser at the Pwn2Own\nhacking competition last week. The company remedied the issue just shy of 24 hours of being made\naware of the flaw, pushing out the updated version 52.0.1 of the browser late Friday. \n\nAsa Dotzler, Mozilla\u2019s participation director for Firefox OS, and Daniel Veditz, a member of\nMozilla\u2019s security team, confirmed the fix via Twitter. \n\n@OrigShyWriter @threatpost @SAP Yes. \n\n\u2014 Asa Dotzler (@asadotzler) March 19, 2017 \n\n \n\nWe shipped @Firefox 52.0.1 today which fixes the vulnerability demonstrated at #Pwn2Own 22 hours\nbefore. \n\n\u2014 Daniel Veditz (@dveditz) March 18, 2017 \n\n \n\nThe vulnerability, an integer overflow in the createImageBitmap() method, was disclosed to Mozilla\non Thursday in Vancouver\u00a0via Trend Micro\u2019s Zero Day Initiative. Hackers with China-based Chaitin\nSecurity Research Lab discovered the bug and used it to escalate privileges in an exploit at the\nhacking competition. The group escalated privileges by combining the bug with an initialized buffer\nin the Windows kernel. The exploit earned them $30,000. \n\nAccording to a Mozilla advisory from Friday, the bug \u2013 marked critical \u2013 was fixed in both Firefox\n52.0.1 and Firefox ESR 52.0.1 by disabling experimental extensions to the createImageBitmap API. \n\nMozilla claims that since the function runs in the content sandbox, it would have required a second\nvulnerability, like the initialized buffer in the Windows kernel Chaitin used, to compromise a\nuser\u2019s computer. If exploited, a remote user would be able to cause arbitrary code to be executed on\na targeted system. \n\nPwn2Own 2017 wrapped up Friday afternoon with several high figure payouts. \n\nRichard Zhu, a/k/a fluorescence, managed to exploit Microsoft\u2019s Edge browser with a SYSTEM-level\nescalation after he chained two use-after-free bugs in the browser together. He used\u00a0a buffer\noverflow, to escalate with SYSTEM, something which fetched him $55,000. \n\nTencent Security\u2019s Team Sniper managed to pull off the competition\u2019s second virtual machine escape\nas well. It required three different bugs but the group, a mix of researchers from Keen Lab and PC\nManager, took down VMWare Workstation. The hackers used a Windows kernel use-after-free\nvulnerability, a Workstation info leak, and an uninitialized buffer in Workstation, to go from\nguest-to-host. \n\nHackers with 360 Security had executed the competition\u2019s first VM escape in 90 seconds via an Edge\nvulnerability earlier Friday. Both teams earned $100,000 for their VM exploits. \n\nLast week saw hackers poke a series of holes in software like Apple\u2019s Safari and macOS, Microsoft\u2019s\nWindows and Edge, and Adobe\u2019s Flash and Reader platforms. \n\nIt\u2019s unclear if any vendors aside from Mozilla are planning to release emergency patches in wake of\nPwn2Own however. Companies like Microsoft and Apple usually wait to incorporate fixes for\nvulnerabilities found during the competition into their next scheduled round of updates. \n\nIn total, contestants were awarded $833,000 for vulnerabilities found this year, surpassing the\namount given out last year, $460,000, and the year prior, $557,000. \n\n", "polarity": 0.0209920634920635, "subjectivity": 0.3620436507936508, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-52-expands-non-secure-http-warnings-enables-sha-1-deprecation/124155/", "date": "2017-03-08T00:00:00.000Z", "author": "Chris Brook", "title": "Firefox 52 Expands Non-Secure HTTP Warnings, Enables SHA-1 Deprecation", "body": "Mozilla fixed 28 vulnerabilities, including some that could result in a crash and the\u00a0bypass of ASLR\nand DEP, when it released Firefox 52 on Tuesday. \n\nSeven of the vulnerabilities are considered critical, according to an advisory posted by the Mozilla\nFoundation. \n\nOne of those vulnerabilities would stem from a JIT spray attack carried out against the asm.js\nJavaScript subset and combined with a heap spray. By chaining together the sprays,\u00a0an attacker could\nhave bypassed the browser\u2019s Address Space Layout Randomization (ASLR) and Data Execution Prevention\n(DEP) protections. ASLR and DEP are preventative features\u00a0that protect memory and helps thwart\nbuffer-overflow attacks. If exploited, the attack could have led to additional memory corruption\nattacks, Mozilla claims. \n\nSeveral of the remaining critical bugs could have resulted in a crash of the browser, either through\na logic error or a series of use-after-free vulnerabilities. \n\nIvan Fratric, a researcher on Google\u2019s Project Zero team, uncovered one of the use-after-free bugs\nafter \u201cmanipulating ranges in selections with one node inside a native anonymous tree and one node\noutside of it.\u201d \n\nA handful of memory safety bugs dug up by Mozilla developers and community members were also fixed\nin Firefox 52. According to the advisory the bugs showed evidence of memory corruption and \u201cwith\nenough effort\u201d could be exploited to run arbitrary code. \n\nAdditional, low-tier bugs fixed in the update fix a potential denial of service attack vector, the\npotential for information leakage, and spoofing attacks. \n\nThe latest iteration of the browser expands in-context user warnings for non-secure HTTP pages with\nlogins. Users will now be confronted with a \u201cThis connection is not secure. Logins entered here\ncould be compromised.\u201d message when they try to enter a username and password field on a non-HTTPS\npage. \n\nFirefox\u00a0began warning users in January, in\u00a0Firefox 51, that HTTP websites collecting passwords may\nnot be secure. Firefox, taking a tip from Google\u2019s Chrome, began displaying such pages with a grey\nlock icon with a red strike-through in the address bar. \n\nFirefox 52 also incorporates Mozilla\u2019s Strict Secure Cookies specification. The rule forbids\ninsecure HTTP sites from setting cookies with the \u201csecure\u201d attribute and from setting a cookie with\nthe same name as an existing secure cookie from the same base domain. Previously insecure origins\ncould add secure cookies, delete them or evict them. Google added support for the specification in\nChrome 52 last July. \n\nWhile Mozilla has been gradually deprecating the SHA-1 algorithm over the past few months, the\ndeprecation policy is enabled by default in Firefox 52. \n\nThe cryptographic hash function has long been viewed as insecure but researchers from Google and\nCentrum Wiskunde and Informatica (CWI) delivered what may end up being the final nail in the coffin\nfor SHA-1, the first practical collision attack, last month. \n\nGoing forward users who encounter SHA-1 certificates that chain up to a root cert in Mozilla\u2019s CA\nprogram will be displayed an \u201cUntrusted Connection\u201d error. For the time being users can override\nthose warnings. \n\nThe latest version of the browser also finally removes support for NPAPI, the Netscape Plugin API. \n\n\u201cSilverlight, Java, Acrobat and the like are no longer supported,\u201d release notes for the browser\nread. \n\nAccording to Martin Thomson, an engineer at Mozilla, the company\u00a0opted not to enable TLS 1.3 by\ndefault in Firefox 52 as originally planned.\u00a0\u00a0According to Thomson, Firefox\u2019s testing showed a\nhigher anticipated rate of failure due to middleboxes. \n\n\u201cI can\u2019t say for certain, but it looks like Firefox 53 will use TLS 1.3,\u201d Thomson told Threatpost\nThursday. \n\nThe technology, widely regarded as archaic\u00a0in today\u2019s web landscape, was initially designed to help\nextend the functionality of browsers. Mozilla announced in October 2015 that it was looking to do\naway with NPAPI plugins by the end of 2016 but pushed back the timeline last year to 2017. \n\nMozilla plans to support Flash in Firefox a bit longer, \u201cuntil early 2018, for those users who need\nmore time for their transition,\u201d Benjamin Smedberg, the manager for Firefox\u2019s quality engineering\nteam, said last July. \n\nThis story was updated on March 9 to clarify whether or not\u00a0Firefox 52 enables TLS 1.3 by default.\u00a0 \n\n", "polarity": 0.027033730158730156, "subjectivity": 0.4639880952380952, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/intermediate-ca-caching-could-be-used-to-fingerprint-firefox-users/123834/", "date": "2017-02-22T00:00:00.000Z", "author": "Chris Brook", "title": "Intermediate CA Caching Could Be Used to Fingerprint Firefox Users", "body": "The way that Firefox caches intermediate CA certificates could open the door to the fingerprinting\nof users and the leaking\u00a0of browsing details, a researcher warned this week. \n\nAlexander Klink, a security researcher based in Germany, discovered the issue and reported it to\nMozilla in January but details of the bug weren\u2019t made public via the company\u2019s Bugzilla\nplatform\u00a0until Tuesday. Klink published a blog post and his proof of concept for the issue later the\nsame day. \n\nIntermediate certificates are subordinate certificates, usually used as a stand-in or proxy, issued\nby root certificates. Intermediate CAs enhance the security of SSL certificates by diminishing the\npotential for root cert compromise; if the root is compromised, the entire ecosystem could collapse,\nif an intermediate CA is compromised, the root CA can revoke it and issue a new one. \n\nFingerprinting Firefox users with cached intermediate CA certificates. #fiprinca\nhttps://t.co/6FQlN4ANlT pic.twitter.com/LfRKAu3tbI \n\n\u2014 Alexander Klink (@alech) February 21, 2017 \n\n \n\nKlink discovered that through a third-party request\u2013in this case one sent from his proof of concept\nwebsite\u2013he could determine which intermediate CAs a Firefox user has cached, even if the user is\noperating the browser in Private Browsing mode. Private Browsing mode doesn\u2019t isolate a user\u2019s\ncache, which is why Private Browsing users aren\u2019t immune here, Klink claims. \n\nAccording to Klink, the browser loads content from incorrectly configured hosts, hosts that are\nmissing the intermediate cert, and then observes whether they were loaded correctly. The backbone of\nhis\u00a0test relies on trying to load an image from a webserver that has a valid cert, but not a\nintermediate CA. Klink is able to tell the difference between whether a user has an intermediate CA\ninstalled based on whether the image loads. \n\nUpon visiting the site, assuming a user is on Firefox, Klink\u2019s proof of concept immediately starts\ncycling through 326 different CAs\u2013Comodo, VeriSign, WoSign, to name a few\u2013and identifies any\nintermediate CAs associated with the profile. \n\n \n\nHe based his proof of concept on intermediate CA cert data he gathered from Root CA extract, a list\nof CA certificates extracted from Mozilla provided by the curl command line tool and library. He\nalso used data from Censys, a search engine for hosts and networks, and Project Sonar, a Rapid 7\nservice that scans public-facing networks for apps, software, and hardware. With the tools he was\nable to uncover 3,366 intermediate CAs that ultimately chain back to a Firefox-trusted root. \n\nAccording to Klink, \u201csemantic information\u201d gleaned from installed intermediate certificates could be\nused to piece together data\u00a0on a user. Some CAs are country- and region- specific and could help an\nattacker narrow down where a user is based geographically. An attacker might also be able to\ndetermine where a user attends college, or studies, as well. In Klink\u2019s case, he has a number of\nGerman academic certs pinned to his profile that could help fill out his fingerprint. If only a\nlimited number of CAs are flagged by the exploit, it\u2019s likely the user could be running the browser\nfrom a malware analysis sandbox, Klink claims. \n\nKlink reported the issue to Mozilla on Jan.\u00a027, but it\u2019s unclear if the company can actually do\nanything \u2013 at least in the near future \u2013 about the problem. Klink says the easiest route would be to\nhave the browser \u201cnot connect to incorrectly configured servers, regardless of whether the\nintermediate is cached or not,\u201d but that\u2019s likely not a move Mozilla would make. \n\nThe researcher advocates\u00a0anyone concerned about the issue to be proactive when it comes to the\ncleanliness of their Firefox profile. \n\n\u201cFrom a user\u2019s perspective, at the moment I can only recommend to regularly clean up your profile\n(by creating a fresh one, cleaning it up from the Firefox UI or using the certutil command line\ntool),\u201d Klink wrote Tuesday, \u201cAlternatively, blocking third-party requests with an add-on such as\nRequest Policy might be useful since the attack obviously needs to make (a lot of) third-party\nrequests. \n\nGervase Markham, a software engineer for Mozilla, weighed in on Klink\u2019s finding via Bugzilla in late\nJanuary\u00a0and\u00a0called Klink\u2019s process \u201ctechnically possible,\u201d but admitted it\u2019d be a \u201cfairly terrible\nway of fingerprinting/tracking.\u201d The engineer goes on to argue that each certificate only provides a\nsmall tidbit of information on a user. \n\n\u201cYou would need 16-24 or so different SSL connections to different servers in order to give you a\nuseful identifier, and that would probably be bad for the performance of your website. You\u2019d also\nneed to buy certificates from 16-24 different CAs, which would be a big hassle,\u201d Markham wrote. \n\nStill Markham acknowledged the issue and wondered if modifying the behavior of the cache, or just\neliminating it, could mitigate the issue. \n\nMozilla\u2019s next step appears to be gathering more information about the cache. Markham said\u00a0that in\norder to move forward, engineers need more telemetry around it, mostly to see how much it\u2019s being\nused but also to get a better grip on \u201cperformance characteristics, and the consequences of turning\nit off.\u201d A bug was filed in Bugzilla earlier this month to look into the issue further but there\u2019s\nbeen no visible movement since. \n\nThe Tor Browser, which is almost entirely built on Firefox code, apparently prevents cached\ncertificate-based tracking like this. Arthur Edelstein, a Firefox engineer, also chimed in on\nKlink\u2019s Bugzilla post, said a preference in Tor, security.nocertdb, is set to true. This makes it so\nthe browser\u2019s intermediate certificate store is memory-based only. \n\nStill, this could be further tweaked, Edelstein says. \n\n\u201cA better solution might be to apply first-party isolation to the certificate cache instead, similar\nto the HSTS/HPKP effort,\u201d Edelstein wrote. \n\nBoth Mozilla and Tor\u00a0scrambled to fix a zero day at the end of November that could\u2019ve been used to\nde-anonymize Tor users. That issue, ultimately tied to a use-after-free vulnerability, was much more\nsevere than Klink\u2019s. An attacker could have remotely executed arbitrary code to collect and forward\nIP and MAC addresses to a central server. The Tor Project is in the middle of hardening its browser\nwith a sandboxed version, something that should limit de-anonymization attacks and confine future\nexploits to the sandbox. \n\n", "polarity": 0.04251494537208823, "subjectivity": 0.4617089259946403, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-51-begins-warning-users-of-insecure-http-connections/123331/", "date": "2017-01-25T00:00:00.000Z", "author": "Tom Spring", "title": "Firefox 51 Begins Warning Users of Insecure HTTP Connections", "body": "Mozilla Foundation took steps with the release of Firefox 51 on Tuesday to communicate more clearly\nto users when they land on a HTTP website collecting personal information such as passwords that\u00a0the\nsite may not be secure. \n\nGoing forward, Firefox will display a gray lock icon with a red strikethrough in the address bar.\nShould the user click on the lock, a dialog box will pop up with text indicating the connection is\nnot secure. Eventually, Mozilla said, this will be the experience for all HTTP pages. \n\n\u201cTo continue to promote the use of HTTPS and properly convey the risks to users, Firefox will\neventually display the struck-through lock icon for all pages that don\u2019t use HTTPS, to make clear\nthat they are not secure,\u201d a post to the Mozilla security blog said. \u201cAs our plans evolve, we will\ncontinue to post updates but our hope is that all developers are encouraged by these changes to take\nthe necessary steps to protect users of the Web through HTTPS.\u201d \n\n \n\nMozilla\u2019s move follows similar efforts by Google with its Chrome browser. Late last year, Google\nsaid starting this month,\u00a0Chrome users who navigate to some\u00a0HTTP sites will be notified they\u2019re on a\nsite that isn\u2019t secure. \n\nOn Tuesday, Mozilla also patched\u00a0several critical security vulnerabilities.\u00a0Topping the list of\ncritical vulnerabilities is one described as a \u201cexcessive JIT code allocation allowing the bypass of\nASLR and DEP.\u201d A JIT (just in time) code is a default processes that handles how Java request are\nmade, allowing for compiled byte code to run directly versus taking an additional step of\ninterpreting the code and then running it. The ASLR (address space layout randomization) guards\nagainst buffer-overflow attacks and DEP (data execution prevention) protects operating systems from\nvirus attacks launched from Window\u2019s system memory locations. \n\n\u201cJIT code allocation can allow for a bypass of ASLR and DEP protections leading to potential memory\ncorruption attacks,\u201d according to the security advisory. The vulnerability (CVE-2017-5375) impacts\nonly Firefox 51. \n\nOther critical vulnerabilities include a use-after-free flaw (CVE-2017-5376) related to manipulating\nXSL in XSLT documents. A second critical memory corruption flaw (CVE-2017-5377) was found impacting\nthe open source 2D graphics library called Skia. \n\nOf the advisories rated high three were use-after-free vulnerabilities related to web animations\n(CVE-2017-5379), DOM manipulation of SVG content (CVE-2017-5380) and a bug related to the Firefox\nMedia Decoder (CVE-2017-5396). \n\nSeveral critical vulnerabilities were also found in Mozilla\u2019s Extended Support Release (ESR) version\nof the Firefox browser. Firefox ESR is a custom version of the Mozilla Firefox browser specifically\ndesigned for the special browser requirements relied upon by schools, government agencies and\nbusinesses that maybe leery about forced browser updates that could disrupt line-of-business\nbrowser-based applications. \n\nOne of those Firefox ESR critical security alerts (CVE-2017-5374) was a memory safety bug that with\nenough effort could be exploited to run arbitrary code, according to the advisory. Another critical\nmemory safety bug was found in Firefox and Firefox ESR 45.7 that also could be exploited to run\narbitrary code. Both Firefox ERS vulnerabilities were patched. \n\nFirefox 51 browser also became the first of the major browsers to display a warning to users who run\ninto a site that doesn\u2019t support TLS certificates signed by the SHA-2 hashing algorithm. According\nto Mozilla, SHA-1 warnings start this week for beta Firefox users and will roll out to all other\nusers sometime after that. The move is meant to protect users from collision attacks, where two or\nmore inputs generate the same hash value. \n\n", "polarity": 0.026731366459627332, "subjectivity": 0.4924585921325053, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-patches-firefox-zero-day-used-to-unmask-tor-browser-users/122204/", "date": "2016-12-01T00:00:00.000Z", "author": "Chris Brook", "title": "Mozilla Patches Firefox Zero Day Used to Unmask Tor Browser Users", "body": "As expected, Mozilla released a new version of Firefox on Wednesday to address a zero-day\nvulnerability that was actively being exploited\u00a0to de-anonymize Tor Browser users. \n\nThe vulnerability, disclosed on a public Tor Project mailing list late Tuesday night, forced the Tor\nProject to also issue an emergency update (6.0.7) in its Tor Browser \u2013 which is partially built on\nopen source Firefox code \u2013 on Wednesday. \n\nAccording to Daniel Veditz, who leads\u00a0Mozilla\u2019s security team, Firefox users should have their\nbrowsers automatically updated at some point over the next 24 hours. If they\u2019d rather not wait,\nusers can download the updated versions \u2013 Firefox 50.0.2, Firefox ESR 45.5.1, and Thunderbird\n45.5.1. \u2013 manually. \n\nFirefox users should update to get an important vulnerability fix https://t.co/DohnA5coHd \n\n\u2014 Daniel Veditz (@dveditz) November 30, 2016 \n\n \n\nThe issue, a use-after-free vulnerability, technically existed in an object, nsSMILTimeContainer,\nwhich is used to facilitate SVG animation in Firefox. Assuming an attacker could trick a user into\nvisiting specially-crafted web content, they could have leveraged the vulnerability to remotely\nexecute arbitrary code on the system. \n\nVeditz said Wednesday afternoon that because of the way the vulnerability behaved, it was collecting\nand forwarding IP and MAC addresses thought to be private and forwarding them back to a central\nserver. \n\n\u201cThe exploit took advantage of a bug in Firefox to allow the attacker to execute arbitrary code on\nthe targeted system by having the victim load a web page containing malicious JavaScript and SVG\ncode. It used this capability to collect the IP and MAC address of the targeted system and report\nthem back to a central server. While the payload of the exploit would only work on Windows, the\nvulnerability exists on Mac OS and Linux as well,\u201d Veditz wrote. \n\nVeditz acknowledged many security researchers surmised on Twitter Wednesday that the way ToR\nvulnerability worked was similar to the way the FBI de-anonymized Tor users in 2013. While Veditz\nstopped short of saying the exploit was created by the FBI or law enforcement, he did float the idea\nand warned how\u00a0it could pose a\u00a0serious threat to privacy. \n\n\u201cAs of now, we do not know whether this is the case. If this exploit was in fact developed and\ndeployed by a government agency, the fact that it has been published and can now be used by anyone\nto attack Firefox users is a clear demonstration of how supposedly limited government hacking can\nbecome a threat to the broader Web,\u201d Veditz said. \n\n", "polarity": -0.01702612863327149, "subjectivity": 0.36568104514533084, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-patches-29-vulnerabilities-prevents-mime-confusion-attacks-in-firefox-50/122007/", "date": "2016-11-16T00:00:00.000Z", "author": "Chris Brook", "title": "Mozilla Patches 29 Vulnerabilities, Prevents MIME Confusion Attacks, in Firefox 50", "body": "Mozilla addressed 29 vulnerabilities, three rated critical, when it released the latest iteration of\nits flagship browser, Firefox 50 and Firefox ESR 45.5, on Tuesday. \n\nFirefox developers said this week that it might take some effort, but at least two of the critical\nbugs could be exploited to run arbitrary code. Both bugs stemmed from memory safety issues in\nFirefox 49, released in mid-September. \n\nAccording to a security advisory published by Mozilla, both issues showed evidence of memory\ncorruption and were discovered by Mozilla developers and community members. \n\nThe other critical bug, a heap-buffer-overflow in Cairo, a programming library that handles 2D\nrendering for the browser could have resulted in an exploitable crash. Abhishek Arya of Google\u2019s\nChrome Security Team is credited for discovering the bug, which Mozilla claims could have been\ntriggered when processing SVG, or Scalable Vector Graphics, content caused by compiler optimization. \n\nSeveral of the bugs Mozilla fixed that were marked high could have also resulted in potentially\nexploitable crashes, including two use-after-free vulnerabilities dug up by researcher Nils. \n\nOther issues could have allowed for timing attacks if images were loaded from a third-party\nlocation, the installation of extensions without user permission, and in Firefox for Android, the\nspoofing of a location bar. \n\nAs Mozilla said it would do in August, Firefox now\u00a0rejects stylesheets, images, or scripts if their\nMIME type doesn\u2019t match the context in which files are loaded. MIME types, or Multipurpose Internet\nMail Extensions types, classify media types. \n\nDoing so reduces the likeliness of the browser being exploited by a MIME confusion attack, according\nto Christoph Kerschbaumer, a Security and Privacy Engineer with the company at the time. Through a\nMIME confusion attack, an attacker could craft and upload images that on the surface appear to be\nimage files but actually contain scripting content. Now the browser will display a warning,\ninforming users when files are blocked due to a \u201cMIME type mismatch.\u201d \n\n \n\nTwo months ago, when Mozilla pushed Firefox 49 it patched a flaw tied to its automated update\nprocess for add-ons that stretched to the Tor Browser as well. To exploit the vulnerability an\nattacker would have had to stolen or forged a TLS certificate and inserted themselves into traffic,\nsomething experts speculated would have been a challenge. \n\nThe 50th iteration of the browser boasts a host of non-security fixes as well. The new version has a\nhandful of new keyboard shortcuts, download protection for executable file types, and improved video\nand SDK extension capabilities. \n\n", "polarity": 0.017095959595959595, "subjectivity": 0.487449494949495, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-turning-tls-1-3-on-by-default-with-firefox-52/121461/", "date": "2016-10-21T00:00:00.000Z", "author": "Chris Brook", "title": "Mozilla Turning TLS 1.3 On By Default With Firefox 52", "body": "When Mozilla ships Firefox 52, on or around March 7, 2017, the browser will come with\nthe\u00a0cryptographic protocol TLS 1.3\u00a0on by default. \n\nMartin Thomson, a principle engineer at Mozilla broke the news Wednesday\u00a0in an email to Mozilla\nDevelopment Platform members. \n\n\u201cTLS 1.3 removes old and unsafe cryptographic primitives, it is built using modern analytic\ntechniques to be safer, it is always forward secure, it encrypts more data, and it is faster than\nTLS 1.2,\u201d Thomson wrote. \n\nTLS 1.3 is the latest version of the Transport Layer Security (TLS) Protocol, the successor to\nSecure Sockets Layer (SSL). It was first drafted more than two years ago, in April 2014, by the\nInternet Engineering Task Force. \n\nThomson said Mozilla tested the standard for incompatibility and didn\u2019t find any issues. The company\nalready has the\u00a0developer tools and UI to support the protocol as well. \n\nMozilla initially implemented support for the protocol with Firefox 49 back in June. But to take\nadvantage of it users had to change a parameter in the browser\u00a0in order to turn it on by default.\nStarting in March, it will ship with draft 16 of the protocol and update to 17 as it becomes\navailable. \n\nGoogle previously implemented TLS 1.3 \u2013 but only in Chrome Canary, its experimental browser, and\nonly if users turn it on in Flags, the browser\u2019s hidden settings section. \n\nTLS 1.3 is still a draft and viewable on the IETF\u2019s website. The consortium is said to be close to\nsettling on a final version of the protocol. The drafts the IETF develops are valid for six months.\nThe current draft expires on March 26, 2017. \n\nCloudflare got an early jump on TLS 1.3 adoption and rolled out the specification to its\u00a0customers\nlast month. \n\nCloudflare\u2019s Head of Cryptography Nick Sullivan lauded the protocol at the time, saying TLS 1.3\n\u201cremoves the \u2018bad crypto smell\u2019 of legacy features, making it less likely that attacks on previous\nversions of the protocol will affect 1.3. \u201d \n\nSullivan said the move makes it easier to configure for server operators, and also results in a\nfaster and better web browsing experience. \n\n\u201cWhen it comes to browsing, we\u2019ve been driving around in a beat-up car from the \u201990s for a while.\nLittle does anyone know, we\u2019re all about to trade in our station wagons for a smoking new sports\ncar,\u201d Sullivan said of TLS 1.3. \n\n", "polarity": 0.08731713688610243, "subjectivity": 0.42946708463949845, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-patches-certificate-pinning-vulnerability-in-firefox/120747/", "date": "2016-09-21T00:00:00.000Z", "author": "Michael Mimoso", "title": "Mozilla Patches Certificate Pinning Vulnerability in Firefox", "body": "As expected, Mozilla patched a highly scrutinized flaw in its automated update process for add-ons\nin Firefox, specifically around the expiration of certificate pins. \n\nThe vulnerability allowed attackers to intercept encrypted browser traffic, inject a malicious\nNoScript extension update and gain remote code execution. The flaw extended to the Tor Browser as\nwell; Tor is built from the Firefox code base and was patched last Friday shortly after the bug was\ndisclosed by a researcher known as movrck. \n\nMozilla patched the flaw yesterday in Firefox 49 and in Firefox ESR 45.4. \n\nIn addition to movrck, the bug was also analyzed by researcher Ryan Duff, a former member of U.S.\nCyber Command. Both said exploitation of the vulnerability would be a challenge given the\ncircumstances that must be in place because an attacker would have to steal or forge a TLS\ncertificate and then insert themselves in the traffic, either by running malicious Tor exit nodes or\nvia a man-in-the-middle attack. \n\nThe attacker would then have to look for an add-on update for NoScript, insert their own and gain\nremote control of a compromised machine. Attacks against individuals would be much more difficult\nthan to target Firefox or Tor users at scale. Successful exploits are likely in the realm of state-\nsponsored attackers or resourced criminal operations; movrck, for example, said an attack would\nlikely cost $100,000 to execute. \n\nMozilla said the vulnerability, CVE-2016-5284, occurred in the process used to update Preloaded\nPublic Key Pinning it its releases. Rather than using HTTP Public Key Pinning (HPKP), Mozilla used\nits own static pins that expire periodically. In this case, the pins expired on Sept. 3 and users\nwere exposed to this attack for 17 days. \n\nAs is the case, movrck\u2019s research was serendipitous. As Duff pointed out, had he tried his attack at\nany time other than this 17 day period, it would have failed. \n\nMozilla on Friday admitted to the flaws in its update process and to the expired pins. Mozilla\u2019s\nSelena Deckelmann, a senior manager of security engineering, said the organization was not aware of\nmalicious certs in the wild, though cautioned that Tor users are especially in the line of fire\ngiven that the Tor Browser comes pre-loaded with certain privacy-focused add-ons. \n\nThis scenario of expired pins would happen again two\u00a0more times before the end of this year, Duff\nlearned, with the biggest exposure starting Dec. 17 when Firefox 50 pins were set to expire, but\nwould not be updated until Jan. 24, 2017. The current expiration date in today\u2019s update will carry\nMozilla through to November and it will have until then to address this. \n\nThe certificate pinning vulnerability was rated high severity by Mozilla, which yesterday patched\nfour bugs in Firefox 49 it rated critical. \n\nTwo separate \u201cmemory safety bugs,\u201d CVE-2016-5256 and CVE-2016-5257, were patched, both of which were\nfound internally by Mozilla developers and could expose machines to arbitrary code execution. \n\nAlso patched with a global buffer overflow in\nmozilla::gfx::FilterSupport::ComputeSourceNeededRegions, which occurred when working with empty\nfilters during canvas rendering, Mozilla said. \n\nThe remaining critical flaw was a heap buffer overflow in nsBMPEncoder::AddImageFrame during the\nencoding of image frames to images and could lead to an exploitable crash. This vulnerability, along\nwith CVE-2016-5257, were also rated critical and patched in Firefox ESR 45.4. \n\n", "polarity": 0.029849624060150366, "subjectivity": 0.5441165413533836, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-patching-firefox-certificate-pinning-vulnerability/120694/", "date": "2016-09-19T00:00:00.000Z", "author": "Michael Mimoso", "title": "Mozilla Patching Firefox Certificate Pinning Vulnerability", "body": "Mozilla is expected tomorrow to patch a critical vulnerability in Firefox\u2019s automated update process\nfor extensions that should put the wraps on a confusing set of twists surrounding this bug. The flaw\nalso affected the Tor Browser and was patched Friday by the Tor Project. \n\nThe vulnerability first saw light of day last week when a researcher who goes by the handle movrck\npublished his disclosure. He said that a resourced attacker with the ability to steal or forge a TLS\ncertificate for addons.mozilla.org could put the entire Tor (and Firefox) ecosystem at risk to\ncompromise. \n\nIn explaining the exploit chain required, movrck said an attacker would have to run malicious exit\nnodes on the Tor network putting himself in man-in-the-middle position to intercept update traffic\nfor addons. The attacker would then be able to inject a malicious NoScript update that would be sent\nto a Tor browser, gaining remote code execution. \n\nMovrck said that the attack could be pulled off for about $100,000, a cost well within the reach of\na criminal operation or nation-state attacker. Forging or stealing a TLS certificate is the hard\npart, but it has been done before in 2011 when Iranian hackers compromised Dutch Certificate\nAuthority DigiNotar and obtained valid wildcard certificates for Google, Mozilla, Yahoo and others. \n\nThe twist is that movrck\u2019s discovery was a bit serendipitous, researcher and former U.S. Cyber\nCommand member Ryan Duff said. Duff wrote last week in a post to the Daily Dave mailing list that\nmovrck\u2019s attack against Tor should have failed and his malicious extension should not have loaded\nbecause of Tor\u2019s strict enforcement of certificate pinning. \n\nTor, which is built from the Firefox code base, suffered from Mozilla\u2019s decision to use a static\ncertificate pin list and a HPKP (HTTP Public Key Pinning) pre-load list of pins with the browser.\nThese pins expire and the expiration dates are set, in this case, by Mozilla. Mozilla, however, did\nnot set the expiration data to last until the next Firefox release, which is tomorrow, Duff said.\nThe Firefox ESR pins expired, instead, on Sept. 3 and the regular Firefox release pins expired Sept.\n10, meaning that pinning had not been enforced since. \n\n\u201cIf he had not done this test between Sept . 3 and Sept. 20, it would have failed,\u201d Duff told\nThreatpost. \n\nDuff said exploitation of this vulnerability would be a challenge and likely be limited to a nation-\nstate level of attack. It would be easier to pull off against Tor users at scale, but more difficult\nto target individuals, he said. \n\n\u201cSince pinning fails, you could forge a TLS certificate that reaches CAs built into Firefox,\u201d Duff\nsaid. \u201cIt\u2019s not easy, but it has been done. Then you need to man-in-the-middle the connection to\naddons (addons.mozilla.org), catch an update process in the traffic and put down a malicious\nupdate.\u201d \n\nMozilla on Friday admitted to the flaws in its update process and to the expired pins. Mozilla\u2019s\nSelena Deckelmann, a senior manager of security engineering, said the organization was not aware of\nmalicious certs in the wild, though cautioned that Tor users are especially in the line of fire\ngiven that the Tor Browser comes pre-loaded with certain privacy-focused add-ons. \n\n\u201cWe investigated this and a fix will be issued in the next Firefox release on\u00a0Tuesday, September\n20.\u00a0 We had fixed an issue with the broken automation on the Developer Edition on September 4, but a\ncertificate pinning had expired for users of our Release and Extended Support Release versions,\u201d\nMozilla said in a statement sent to Threatpost. \u201cWe have turned on HPKP on the Add-ons Update\nservice itself so that users will remain protected as part of the background updates performed\nregularly by Firefox.\u201d \n\nAs Duff pointed out in a post-mortem he wrote today, the bug would have cropped up again\u00a0several\nmore times before the end of the year, with the biggest window of exposure starting Dec. 17 when\nFirefox 50 static pins were set to expire and not be updated until five weeks later, Jan. 24, 2017.\nDuff raised the issue in an IRC channel devoted to Tor developers and data compiled by Matt Nordhoff\nshows that the situation has not happened frequently. Firefox ESR pinning, for example, has expired\nonly once before, from July 4-Aug 11, 2015. Tor, meanwhile, did not support static pins until\nversion 5.0 and has not been vulnerable until this most recent release. \n\n\u201cI will never handle anything this interesting again,\u201d Duff said. \n\n", "polarity": -0.005920634920634909, "subjectivity": 0.4286404151404151, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/privacy-proponents-rally-in-favor-of-tracking-protection-in-firefox/113130/", "date": "2015-06-03T00:00:00.000Z", "author": "Chris Brook", "title": "Privacy Proponents Rally In Favor of Tracking Protection in Firefox", "body": "Privacy advocates are calling on Mozilla to better deploy Tracking Protection, a technology that\noffers more stringent privacy and speeds up page loads by blocking requests to tracking domains, in\nits Firefox\u00a0browser. \n\nThe functionality has existed in the browser for months but\u00a0the idea of making it a more prominent\nfeature\u00a0began to\u00a0pick up steam a week and a half ago at Web 2.0, a one day workshop held in\nconjunction with the IEEE\u2019s Symposium on Security and Privacy, in San Jose, Calif. A paper\nwritten\u00a0by Monica Chew, a former Mozilla software engineer, and Georgios Kontaxis, a computer\nscience student\u00a0at Columbia University who previously interned at Mozilla, won best paper at\nthe\u00a0conference, and support for the initiative has slowly bubbled up since then. \n\nThe paper, \u201cTracking Protection in Firefox For Privacy and Performance,\u201d (.PDF) was Chew\u2019s last\nproject with Firefox before leaving the company at the beginning of April, and demonstrates how\nbetter implementing the feature could not only result in better privacy, but a better user\nexperience overall. \n\nTracking Protection, prevents any network communication between the browser and unsafe third-party\norigins. The feature, which borrows elements from Disconnect, including its blocklist of known\ntracking domains, has been available in Firefox since January but is currently optional. If enabled,\nChew and Kontaxis found that it could result in a fairly drastic reduction in the number of cookies\nbeing set and faster page load times. \n\nFor their research the two turned on Tracking Protection, combed through Alexa\u2019s top 200 news sites\nand found 67.5 percent fewer HTTP cookies being set. Chew and Kontaxis also experienced a 44 percent\nmedian reduction in page load time and a 39 percent reduction in data usage, something the two\ndirectly attribute to the feature not having to take time to download and render content. \n\nFor one instance, Chew and Kontaxis found that a site like weather.com loaded in 3.5 seconds with\nTracking Protection versus 6.3 without it. The site also only\u00a0triggered 2.8 MB of data usage with\nthe feature, compared to 4.3 MB without. \n\nChew and Kontaxis make a lot of points in the paper but chief among them is\u00a0that the Internet\u2019s\nrevenue model has become muddied by \u201cmisaligned incentives between users, advertisers, and content\nproviders,\u201d something that\u2019s ultimately resulted in what the dub \u201ca race to the bottom.\u201d \n\nOfficials at the Electronic Frontier Foundation echoed Chew\u2019s sentiments on Tuesday, agreeing that\nFirefox developers should enable Tracking Protection and make the functionality easier to use \u2014 even\nif it\u2019s just for users who have enabled Private Browsing mode. \n\nAs it stands currently, Tracking Protection is off by default and buried\u00a0deep in the browser\u2019s\nsettings. Users have to jump through a series of proverbial hoops and ladders, including making\nchanges through Firefox\u2019s about:config section and bypassing a warning to turn it on. \n\n \n\nThe EFF points out the feature isn\u2019t scheduled to be offered to Firefox beta users to testing and\nimprovement anytime soon, and that while Apple and Microsoft include at least some form of anti-\ntracking technology in their browsers, Firefox and Chrome have lagged behind. \n\n\u201cWe eagerly await the day that advertisers respect user\u2019s requests for privacy and for browsers to\nimplement their protections by default,\u201d Noah Swartz, a staff technologist for the EFF\u2019s Tech\nProjects team, wrote Tuesday. \n\nIn the meantime the EFF is again encouraging users to install its Privacy Badger add-on. The\nextension, which the digital rights group released last summer, blocks many silent forms of\ntracking, requires no configuration, and is available for both Firefox and Chrome. \n\nAfter their presentation at Web 2.0, Chew wrote in her personal blog and reflected on her work and\nthe forces at odds between advertising and security, claiming\u00a0it will take a \u201cmajor force to disrupt\nthis ecosystem,\u201d but that she hopes her former employer can be that force. \n\n\u201cI believe that Mozilla can make progress in privacy, but leadership needs to recognize that current\nadvertising practices that enable \u2018free\u2019 content are in direct conflict with security, privacy,\nstability, and performance concerns \u2013 and that Firefox is first and foremost a user-agent, not an\nindustry-agent.\u201d \n\n \n\n", "polarity": 0.18241869918699188, "subjectivity": 0.43109756097560975, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-38-fixes-13-flaws-ships-with-drm-support/112764/", "date": "2015-05-12T00:00:00.000Z", "author": "Dennis Fisher", "title": "Firefox 38 Fixes 13 Flaws, Ships With DRM Support", "body": "Mozilla has fixed 13 security flaws in Firefox 38, including five critical vulnerabilities. The new\nversion of the browser also includes a feature that enables the use of DRM-enabled video content in\nFirefox, a decision that comes with some controversy. \n\nDRM (digital rights management), the generic name for technologies that are used to restrict the\nconsumption of premium content, is widely seen as a flawed system, and Mozilla officials\nacknowledged that enabling DRM-wrapped content in Firefox was a difficult decision. \n\n\u201cA year ago, we announced the start of efforts to implement support for a component in Firefox that\nwould allow content wrapped in Digital Rights Management (DRM) to be played within the HTML5 video\ntag. This was a hard decision because of our Mission and the closed nature of DRM. As we explained\nthen, we are enabling DRM in order to provide our users with the features they require in a browser\nand allow them to continue accessing premium video content. We don\u2019t believe DRM is a desirable\nmarket solution, but it\u2019s currently the only way to watch a sought-after segment of content,\u201d\nDenelle Dixon-Thayer of Mozilla wrote in a post. \n\n\u201cToday, Firefox includes an integration with the Adobe Content Decryption Module (CDM) to playback\nDRM-wrapped content. The CDM will be downloaded from Adobe shortly after you upgrade or install\nFirefox and will be activated when you first interact with a site that uses Adobe CDM.\u201d \n\nTo help alleviate the potential user pushback on this decision, Mozilla also is offering a version\nof Firefox 38 that doesn\u2019t include the CDM module. The company also has designed a sandbox that\nencompasses the CDM. \n\nOn the security patch side of things, Firefox 38 includes fixes for the five critical flaws, as well\nas five high-risk bugs and two\u00a0moderately rated vulnerabilities. Among the critical bugs is a buffer\noverflow in the way the browser parses compressed XML. \n\n\u201cSecurity researcher Ucha Gobejishvili used the Address Sanitizer tool to find a buffer overflow\nwhile parsing compressed XML content. This was due to an error in how buffer space is created and\nmodified when handling large amounts of XML data. This results in a potentially exploitable crash,\u201d\nthe Mozilla advisory says. \n\nThere is another buffer overflow with SVG content and CSS, as well as use-after-free vulnerability\nthat occurs during some text processing operations. Firefox 38 also fixes a handful of memory safety\nissues. \n\n", "polarity": -0.04163715072805982, "subjectivity": 0.5060507674144038, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-moving-toward-full-https-enforcement-in-firefox/112537/", "date": "2015-05-01T00:00:00.000Z", "author": "Brian Donohue", "title": "Mozilla Moving Toward Full HTTPS Enforcement in Firefox", "body": "The Mozilla Foundation is initiating the process to phase out insecure HTTP connections in the\nFirefox browser. The decision is part of a broader movement to encrypt the Web, which in the case of\nMozilla Firefox, means permitting only encrypted HTTPS browser connections. \n\nMozilla is the developer of Firefox. It accounts for between 12 and 22 percent of the browser market\nshare throughout its various versions. The group has not yet established a timeline for the\ndeprecation of HTTP. \n\nFirefox security lead Richard Barnes says the plan to implement full HTTPS enforcement in the\nbrowser consists of two broad steps. First, the group will select a date, after which new Firefox\nfeatures will be available only to secure, HTTPS-enabled websites. The second step will be to begin\nmaking existing features incompatible with insecure, HTTP sites, particularly features with security\nand privacy implications. \n\nOf course, it\u2019s not altogether clear what constitutes a \u201cnew\u201d feature, so Mozilla plans to work with\nits developer community to clearly define what a new feature is before settling on a hard date.\nPerhaps more complicated will be the decision to start cutting off existing features for HTTP\nconnections. Mozilla acknowledges that it will need to strike a balance between securing and\nbreaking websites, because cutting off HTTP access to critical features will necessarily have a\ndeleterious effect on certain sites. \n\n\u201cWe\u2019re also already considering softer limitations that can be placed on features when used by non-\nsecure sites,\u201d said Barnes yesterday. \u201cFor example, Firefox already prevents persistent permissions\nfor camera and microphone access when invoked from a non-secure website.\u00a0 There have also been some\nproposals to limit the scope of non-secure cookies.\u201d \n\nThe movement toward full SSL adoption on the Web is by no means new. However, revelations of vast,\npervasive and unchecked National Security Agency spying on American citizens have lit a fire under\nthe movement over the past few years. Google announced last year that it would grant search favor to\nsites deploying HTTPS. Earlier this month, the search giant announced it would begin forcing\nencryption on its ad services as well. \n\n", "polarity": 0.011349721706864564, "subjectivity": 0.5612507730364873, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-to-remove-turkish-ca-from-firefox-trust-store/112445/", "date": "2015-04-28T00:00:00.000Z", "author": "Dennis Fisher", "title": "Mozilla to Remove Turkish CA From Firefox Trust Store", "body": "Mozilla is removing a Turkish root CA from the Firefox\u00a0trust store, not because of a compromise or a\nmistakenly issued certificate, but because the certificate authority hasn\u2019t lived up to the audit\nrequirements Mozilla has for trusted CAs. \n\nLike other browser vendors, Mozilla has a lengthy policy that sets out the requirements for CAs to\nbe included in the trust store for its browser. That trust store is the heart of the way that users\ninteract with secure sites, email servers and other entities that require trusted certificates. Each\nbrowser includes a default set of CAs and root certificates that the browser trusts and historically\nit\u2019s been quite rare for browser vendors to remove a CA. But in the last few years, a series of\nattacks on CAs, compromises and certificate thefts has led to a handful of such incidents. \n\nBut this move by Mozilla is one of the few public incidents in which a browser vendor has removed a\nroot CA for not meeting the policy requirements. The CA in this case is\u00a0e-Guven Elektronik Bilgi\nGuvenligi A.S. in Turkey. \n\n\u201cThe integrity of the secure Web depends on CAs issuing certificates that correctly attest to the\nidentity of websites. Mozilla products ship a default list of CA certificates, which may change with\neach security patch or new version of the product. Inclusion of a CA certificate in Mozilla products\ninvolves a rigorous process and evaluation of the CA\u2019s public-facing policy documentation and audit\nstatements, in order to verify that the CA conforms to the criteria required by Mozilla\u2019s CA\nCertificate Inclusion Policy,\u201d Mozilla\u2019s security team wrote in a blog post. \n\n\u201cThe CA certificates included in the Mozilla list can be marked as trusted for various purposes, so\nthat the software can use the CA certificates to verify certificates for (1) SSL/TLS servers, (2)\nS/MIME email users, and/or (3) digitally-signed code objects, without having to ask users for\nfurther permission or information.\u201d \n\nOne of the requirements is an annual audit of the CA\u2019s procedures and technical capabilities, and\nMozilla officials said that e-Guven\u00a0hasn\u2019t had such an audit since 2013. Mozilla has contacted\ncompany officials a number of times, asking for information or audit statements and has gotten\nnothing in return. \n\nThe e-Guven root CA will be removed from Firefox starting with version 38. \n\n", "polarity": 0.038131313131313134, "subjectivity": 0.3576599326599326, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-reduces-threat-of-export-grade-crypto-to-firefox/121034/", "date": "2016-10-03T00:00:00.000Z", "author": "Michael Mimoso", "title": "Mozilla Reduces Threat of Export-Grade Crypto to Firefox", "body": "Logjam was one of several downgrade attacks discovered in the last 18 months that could\ntheoretically allow a resourced attacker to take advantage of lingering export-grade cryptography to\nread and modify data over a supposedly secure connection. \n\nWhile the severity of this particular attack against the Diffie-Hellman key exchange has been\ndebated, Mozilla last week took steps in the Firefox browser to deny connections to servers using\nweak D-H keys. \n\nMozilla said in a short announcement last week that the move was an effort to shore up the privacy\nof Firefox users by increasing the minimum key size to 1023 bits for TLS handshakes configured to\nuse the Diffie-Hellman key exchange. \n\n\u201cA small number of servers are not configured to use strong enough keys. If a user attempts to\nconnect to such a server, they will encounter the error \u2018ssl_error_weak_server_ephemeral_dh_key,'\u201d\nMozilla engineer David Keeler said. \n\nThe Diffie-Hellman algorithm is used in symmetric encryption ciphers such as AES to set up key\nexchanges. Researchers last May found a weakness in Diffie-Hellman where an attacker could downgrade\nthe strength of the encryption used in an exchange to an export-grade 512 bits. The Logjam attack is\nsimilar to its cousin FREAK, but FREAK attacked RSA key exchanges. \n\n\u201cThe attack affects any server that supports\u00a0DHE_EXPORT ciphers, and affects all modern web\nbrowsers,\u201d wrote a team of researchers in explaining the circumstances enabling the Logjam attack.\nExport cryptography is an artifact of the \u201990s crypto wars where deliberately weakened versions of\ncrypto protocols were insisted upon by the U.S. government on products shipped outside the country.\nSupport for export-grade crypto should have been deprecated long ago, but lingering issues crop up,\nas was the case with the FREAK, Logjam and DROWN attacks. \n\nIt\u2019s believed that, for now, only advanced attackers such as the NSA or other government-backed\ngroups focused on offensive security, could have the computational resources and experience to\nexploit export-grade crypto sufficiently to impact encrypted traffic. \n\n\u201cMillions of HTTPS, SSH, and VPN servers all use the same prime numbers for Diffie-Hellman key\nexchange. Practitioners believed this was safe as long as new key exchange messages were generated\nfor every connection,\u201d the Logjam researchers wrote at the time. \u201cHowever, the first step in the\nnumber field sieve\u2014the most efficient algorithm for breaking a Diffie-Hellman connection\u2014is\ndependent only on this prime. After this first step, an attacker can quickly break individual\nconnections.\u201d \n\nInitially, it was believed that the Logjam attacks could be used to downgrade connections on 80\npercent of servers supporting weak Diffie-Hellman exchanges. Coupled with the belief that a nation\nstate group could break a 1024-bit prime number, the Logjam researchers believed that breaking the\nmost common 1024-bit prime number used by webservers would allow for the interception of traffic\nagainst nearly 20 percent of the web\u2019s top one million HTTPS-protected sites, and a second prime\nwould put 66 percent of VPN servers and 26 percent of SSH servers in harm\u2019s way. \n\nThose numbers, however, were quickly reduced after a reality check by other cryptographers. Paul\nWouters, a core developer at the Libreswan Project said because of the way the researchers scanned\nand tested VPN servers, their projections were likely too high. This was backed up in a comment to a\nThreatpost article on Wouters\u2019 work by Adi Shamir, one of the developers of the RSA crypto\nalgorithm, and one of Shamir\u2019s PhD students Eyal Ronen. \n\nShamir and Ronen said they arrived at the same conclusions in independent tests against IPsec\nconnections and said the success rate of a hypothetical NSA attack on Diffie-Hellman would be lower\nthan original estimates. They also tested HTTPS connections and concluded that the most popular\nsites on the web are the least likely to negotiate Diffie-Hellman handshakes and are rarely of\ninterest to intelligence services. \n\n", "polarity": 0.09078738201689021, "subjectivity": 0.49048435171385985, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-fixes-14-year-old-bug-in-firefox-41/114818/", "date": "2015-09-25T00:00:00.000Z", "author": "Chris Brook", "title": "Mozilla Fixes 14-Year-Old Bug in Firefox 41", "body": "Developers at Mozilla pushed out Firefox 41 this week and brought some much needed relief to Adblock\nPlus users by finally fixing a 14-year old bug in the browser. \n\nThe update addresses a longstanding issue with how the browser handles memory usage by the add-on.\nPreviously the browser created too many \u201cstyle sheets\u201d for Adblock Plus users, something that was\ncausing small spikes in memory usage. \n\nAdblock Plus is far and away Firefox\u2019s most popular extension, boasting over 21,000,000 users,\naccording to Firefox\u2019s add-ons page. The second most popular extension only has 5,000,000 users. \n\nWhile Mozilla doesn\u2019t mention the fix in the release notes for Firefox 41, Ben Williams, Adblock\nPlus\u2019 Operations and Communications Manager acknowledged the update with a post on the company\u2019s\nblog Wednesday. \n\n\u201c[Users] can now rest easier and browse just that much quicker, because last week a Mozilla\ndeveloper patched a 14-year-old bug,\u201d Williams wrote, \u201cNow Firefox uses about the same amount of\nmemory whether you\u2019re running ABP or not.\u201d \n\nAs Williams points out, incredulously, a Bugzilla ticket related to the issue (bug 77999) was\nfirst\u00a0filed more than 14 years ago, on April 27, 2001. According to Nicholas Nethercote, an\nAustralian Mozilla programmer, Cameron McCormack, a Firefox developer patched the issue over the\nsummer by adding data structures that share the results of cascading user agent style sheets. \u00a0It\nwasn\u2019t until Tuesday, when Mozilla released the stable version of Firefox 41, that the patch went\nlive however. \n\nThe latest build of the browser also addresses a handful of bugs, including eight reported by\nsecurity researcher Ronald Crane. The bugs, which were dug up during code inspection, included\nseveral potential memory safety issues according to a Mozilla Foundation Security Advisory. \n\n\u201cThese do not all have clear mechanisms to be exploited through web content but are vulnerable is a\nmechanism can be found to trigger them,\u201d the advisory, which is marked high impact, reads. \n\nIn addition to Crane\u2019s bugs, Firefox 41 also fixes a smattering of other issues, including memory\nsafety errors, use-after-free vulnerabilities, buffer overflows, and other bugs that could let\nattackers run arbitrary code, and gather sensitive data, among other consequences. \n\nThe latest iteration of the browser also incorporates Firefox Hello, the browser\u2019s WebRTC-based\ncommunications system, enhanced IME support, user personalization, and enhanced box-shadow rendering\nperformance. \n\n", "polarity": 0.12513814616755792, "subjectivity": 0.49529411764705883, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-40-begins-warning-users-about-unsigned-add-ons/114237/", "date": "2015-08-12T00:00:00.000Z", "author": "Dennis Fisher", "title": "Firefox 40 Begins Warning Users About Unsigned Add-Ons", "body": "With Tuesday\u2019s\u00a0release of Firefox 40, Mozilla has begun the process of requiring all add-ons for the\nbrowser to be signed. The company announced the forthcoming change in February, and Firefox 40 is\nthe first version to warn users about unsigned add-ons. \n\nThe goal for the change in policy is to protect users from malicious extensions and add-ons, a\nproblem that has arisen in various browsers over the years. Google has taken the approach of only\nallowing\u00a0developers to distribute extensions through its Chrome Web Store. \n\n\u201cHowever, we believe that forcing all installs through our distribution channel is an unnecessary\nconstraint. To keep this balance, we have come up with extension signing, which will give us better\noversight on the add-ons ecosystem while not forcing AMO to be the only add-on distribution\nchannel,\u201d Jorge Villalobos of Mozilla said in a blog post in announcing the change in February. \n\nIn the next version, Firefox will have an option that allows users to enforce signatures on add-ons,\nbut users will be able to set the preference themselves. But starting with Firefox 42, signatures\nwill be enforced on all add-ons in both the beta and release versions of the browser. Developers\nwill have to get the signatures through Addons.mozilla.org. \n\n\u201cFiles submitted for signing will go through an automated review process. If they pass this review,\nthey are automatically signed and sent back to the developer. This process should normally take\nseconds. If the file doesn\u2019t pass review, the developer will have the option to request a manual\nreview, which should take less than two days. This is not the same process that currently applies to\nAMO add-ons, which has been typically slower,\u201d the Mozilla wiki says. \n\nIn addition to the add-on signing, Mozilla also has expanded its warnings about malicious and\nunwanted software in Firefox 40. Users now will see a special warning dialog when they visit a page\nthat contains unwanted software. \n\n\u201cWhen downloading a file of a type that usually contains Windows or Mac executable code (for\nexample, .com, .exe, .msi, .app, .dmg) Firefox asks Google\u2019s Safe Browsing service if the file is\nsafe by sending it some of the download\u2019s metadata (file type, name, size, hash, URL, locale). If\nthe file is flagged as harmful by this service, the download manager will block access to the file\nuntil the user performs a right-click, and unblocks it manually,\u201d Francois Marier, a security and\nprivacy engineer at Mozilla, said in a blog post.\u00a0 \n\n", "polarity": 0.09335839598997495, "subjectivity": 0.4484962406015037, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-disables-flash-in-firefox/113763/", "date": "2015-07-14T00:00:00.000Z", "author": "Dennis Fisher", "title": "Mozilla Disables Flash in Firefox", "body": "As the zero days in Adobe Flash continue to pile up, Mozilla has taken the unusual step of disabling\nby default all versions of Flash in Firefox. \n\nThe move is a temporary one as Adobe prepares to patch two vulnerabilities in Flash that were\ndiscovered as a result of the HackingTeam document dump last week. Both vulnerabilities are use-\nafter-free bugs that can be used to gain remote code execution. One of the flaws is in Action Script\n3 while the other is in the BitMapData component of Flash. \n\nExploits for these vulnerabilities were found in the data taken from HackingTeam in the attack\ndisclosed last week. An exploit for one of the Flash vulnerabilities, the one in ActionScript 3, has\nbeen integrated into the Angler exploit kit already and there\u2019s a module for it in the Metasploit\nFramework, as well. Those realities increase the danger to users, especially those who\u00a0are prone to\nclicking on liks from strangers. \n\nAdobe is expected to patch the Flash zero days this week, but in the interim Mozilla has\nautomatically disabled all versions of the plugin in Firefox as a way to protect users. \n\n\u201cAll versions of Adobe\u2019s Flash Player plugin are currently deactivated by default, until Adobe\nreleases an updated version to address known critical security issues,\u201d Mozilla said on its support\nsite.\u00a0 \n\nThese are the second and third Flash zero days discovered in the HackingTeam cache. On July 6\nresearchers discovered the first Flash bug being used by\u00a0HackingTeam\u2019s intrusion software, which\nAdobe patched quickly. That bug also was incorporated into exploit kits, including Angler, Neutrino,\nand Nuclear. \n\nSecurity experts for years have been encouraging users to disable or remove Flash from their\nmachines because of the constant stream of vulnerabilities. That parade of bugs has made Flash a\nhighly attractive target for attackers, who know that it is the most widely deployed software on the\nWeb, a fact that makes Flash bugs quite valuable. Recent events have renewed the security\ncommunity\u2019s calls for users to abandon Flash, and on Sunday, Facebook CSO Alex Stamos said Flash has\noutlived its usefulness. \n\n\u201cIt is time for Adobe to announce the end-of-life date for Flash and to ask the browsers to set\nkillbits on the same day,\u201d Stamos said on Twitter. \n\n\u201cEven if 18 months from now, one set date is the only way to disentangle the dependencies and\nupgrade the whole ecosystem at once,\u201d Stamos said. \n\n", "polarity": 0.06284722222222221, "subjectivity": 0.4076388888888889, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-39-out-with-patches-for-four-critical-vulnerabilities/113686/", "date": "2015-07-08T00:00:00.000Z", "author": "Dennis Fisher", "title": "Firefox 39 Out With Patches for Four Critical Vulnerabilities", "body": "Mozilla has rolled out a new version of its Firefox browser, an update that includes patches for\nfour critical security vulnerabilities and several less-severe bugs. \n\nIN all, Firefox 39 patches 13 vulnerabilities, including two high-risk bugs and six moderate-level\nones. The most dangerous vulnerabilities, however, include a pair of use-after-free bugs in one part\nof the browser and another in a separate component, as well as a number of memory corruption flaws. \n\n\u201cSecurity researcher Looben Yan used the Address Sanitizer tool to discover two related use-after-\nfree vulnerabilities that occur when using XMLHttpRequest in concert with either shared or dedicated\nworkers. These errors occur when the XMLHttpRequest object is attached to a worker but that object\nis incorrectly deleted while still in use. This results in exploitable crashes,\u201d the Mozilla\nadvisory says. \n\nThe other use-after-free flaw is in the Content Policy component of Firefox. \n\n\u201cSecurity researcher Herre reported a use-after-free vulnerability when a Content Policy modifies\nthe Document Object Model to remove a DOM object, which is then used afterwards due to an error in\nmicrotask implementation. This leads to an exploitable crash,\u201d the advisory says. \n\nIn addition, the critical bugs also include the memory corruption flaws, and a potpourri of bugs a\nresearcher discovered through code inspection. \n\n\u201cSecurity researcher Ronald Crane reported seven vulnerabilities affecting released code that he\nfound through code inspection. These included three uses of uninitialized memory, one poor\nvalidation leading to an exploitable crash, one read of unowned memory in zip files, and two buffer\noverflows. These do not all have clear mechanisms to be exploited through web content but are\nvulnerable if a mechanism can be found to trigger them,\u201d the advisory says. \n\n", "polarity": -0.0472027972027972, "subjectivity": 0.5298368298368298, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-patches-critical-vulnerabilities-in-firefox-44/116033/", "date": "2016-01-27T00:00:00.000Z", "author": "Michael Mimoso", "title": "Mozilla Patches Critical Vulnerabilities in Firefox 44", "body": "Mozilla has patched a number of critical vulnerabilities in Firefox 44 and Firefox Extended Release\n38.6, which were released this week. \n\nThe most serious flaws were memory vulnerabilities that lived in both the public and extended\nsupport versions of the browser. \n\nA buffer overflow (write) in WebGL, the browser\u2019s Web graphics library, was patched. WebGL is a\nJavaScript API that renders 3D and 2D graphics in the browser without the need for a plug-in.\nMozilla said the vulnerability was discovered in the buffersubdata method of the API. \n\nMozilla also addressed several \u201cmemory safety bugs\u201d in the engine used in Firefox and other Mozilla\nproducts. \n\n\u201cSome of these bugs showed evidence of memory corruption under certain circumstances, and we presume\nthat with enough effort at least some of these could be exploited to run arbitrary code,\u201d Mozilla\nsaid in its advisory. \n\nMozilla said the flaws cannot be exploited through Thunderbird where scripting is disabled, but\ncautioned against the risk in \u201cbrowser-like contexts.\u201d \n\nThree other memory-related bugs were patched in Firefox 44. The vulnerabilities were found in the\nANGLE graphics library, and in Firefox\u2019s handling of zip files and parsing of the libstagefright\nlibrary. \n\n\u201cThe first two issues do not all have clear mechanisms to be exploited through web content but are\nvulnerable if a mechanism can be found to trigger them,\u201d Mozilla said in its advisory. \u201cThe\nlibstagefright issue could potentially be triggered by a malicious MP4 format video file, allowing\nfor arbitrary code execution.\u201d \n\nMozilla also patched vulnerabilities it rated \u201chigh severity\u201d in Firefox 44, including two that\nfacilitate address bar spoofing, and another set of issues in the browser\u2019s Network Security\nServices that can introduce cryptographic weaknesses, the advisory said. \n\n", "polarity": -0.031058201058201056, "subjectivity": 0.4728571428571428, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/apple-patches-productivity-software-mozilla-updates-firefox-with-security-fix/115081/", "date": "2015-10-16T00:00:00.000Z", "author": "Michael Mimoso", "title": "Apple Patches Productivity Software; Mozilla Updates Firefox with Security Fix", "body": "Apple on Thursday patched a handful of vulnerabilities in several iterations of its Keynote, Pages,\nNumbers and iWork productivity software. \n\nThe most serious of the security flaws allow an attacker to execute code on a compromised OS X\ncomputer running Yosemite 10.10.4 or later, or iOS 8.4 or later on mobile devices. \n\nKeynote 6.6, Pages 5.6, Numbers 3.6, and iWork for iOS 2.6 were vulnerable to multiple input\nvalidation vulnerabilities that could be exploited when parsing a document hosting an exploit. Apple\nsaid opening a malicious document in either of the applications could lead to loss of user\ninformation; it addressed the problem by improving input validation, Apple said. \n\nA separate memory corruption vulnerability could also be exploited in Keynote, Pages and Numbers\nthat could crash the application and result in an attacker being able to run code on the affected\nmachine. \n\nAnother memory corruption flaw exists in Pages exclusively that could also lead to Pages crashing\nand the attacker running code of their choice. In both cases, Apple said it improved memory handling\nto address the vulnerability. \n\nMozilla Patches Flaw in Firefox\u00a0 \n\nAlso on Thursday, Mozilla announced it had made Firefox 41.0.2 available. \n\nThe updated version of the browser patched a cross-origin restriction bypass vulnerability Mozilla\nranked \u201chigh.\u201d \n\nMozilla said in its advisory that the fetch()API in Firefox did not correctly implement the corss-\norigin resource sharing specification. As a result, an attacker hosting a malicious webpage could\naccess private data from other origins. \n\n", "polarity": 0.05013888888888889, "subjectivity": 0.3318055555555555, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-embraces-private-browsing-with-tracking-protection-in-firefox-42/115275/", "date": "2015-11-05T00:00:00.000Z", "author": "Chris Brook", "title": "Mozilla Embraces Private Browsing with Tracking Protection in Firefox 42", "body": "Mozilla has pushed a feature in Firefox live that allows users\u00a0to block certain page elements while\nbrowsing privately. \n\nThe feature, Private Browsing with Tracking Protection, previously available to beta users, blocks\nthird party page elements, such as\u00a0ads, social network buttons, analytics, and other bits of\ninformation that could record a users\u2019 browsing activity and profile users across multiple sites\nwhen its loaded by pages. \n\n \n\nThe functionality was quietly launched in beta builds of the browser in September but made it into\nthe final build of Firefox 42, released on Tuesday. The latest iteration of the browser also\nfeatures a control center, which can be clicked via a shield icon in the address bar, that contains\nsecurity and privacy controls for whatever site a user is on. \n\nThe center is designed to act as an all-in-one shop for those browsing privately with tracking\nprotection. It tells users whether or not the page they\u2019re on is secure and gives them the option to\ndisable tracking protection on a session by session basis. Since the functionality can break\nwebsites by blocking certain behavior, users may want to experiment and use it from\u00a0site to\u00a0site. \n\n \n\nThe move brings to fruition a feature privacy advocates urged the company to deploy earlier this\nyear. \n\nMonica Chew, a former software engineer with Firefox, and Georgios Kontaxis, a student at Columbia\nUniversity, released a paper in April,\u00a0\u201cTracking Protection in Firefox For Privacy and Performance,\u201d\n(.PDF) that stressed the feature could radically speed up page load times. \n\nThe two actually experienced a 44 percent reduction in page load time, a 39 percent decrease in data\nusage, and 68 percent fewer cookies being set after enabling Tracking Protection. In an accompanying\nworkshop at the IEEE\u2019s Symposium on Security and Privacy the two encouraged the browser to implement\nthe feature on a broader basis. In earlier versions of Firefox, users had to dig deep through the\nbrowsers settings to enable it. \n\nThe Electronic Frontier Foundation endorsed Chew and Kontaxis\u2019 research at the time, and announced\nthis week that it was pleased Mozilla was able to incorporate Private Browsing with Tracking\nProtection into Firefox, but claims the company could still do more to protect user privacy. \n\n\u201cThis is a first step,\u201d Noah Swartz, a Staff Technologist with the watchdog wrote Tuesday. \n\n\u201cRight now, tracking protection is available only in private browsing mode. Ideally, Mozilla would\nalso commit to protecting people outside of private browsing mode by turning on Tracking Protection\nfor users that have enabled the Do Not Track setting in their browser.\u201d \n\nThe EFF also called on Mozilla to join the Do Not Track coalition it started with Adblock and\nDisconnect earlier this year, and expressed its desire for other browsers and mobile platforms to\nfollow in Mozilla\u2019s footsteps. \n\n", "polarity": 0.15091845091845094, "subjectivity": 0.4564028314028315, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-46-patches-critical-memory-vulnerabilities/117698/", "date": "2016-04-27T00:00:00.000Z", "author": "Michael Mimoso", "title": "Firefox 46 Patches Critical Memory Vulnerabilities", "body": "Mozilla yesterday updated Firefox and patched 10 vulnerabilities, one which was rated critical. \n\nFirefox 46 also included patches for four vulnerabilities that Mozilla rated as high severity.\nCritical bugs enabled remote code execution without user interaction, while bugs rated high can be\nexploited to steal browser data or inject code into websites via the browser. \n\nThe critical vulnerability was found internally and included four memory-related flaws in the\nbrowser engine used by Firefox and other Mozilla software. \n\n\u201cSome of these bugs showed evidence of memory corruption under certain circumstances, and we presume\nthat with enough effort at least some of these could be exploited to run arbitrary code,\u201d Mozilla\nsaid in its advisory. \n\nAll four bugs\u2014CVE-2016-2807, CVE-2016-2806, CVE-2016-2805, and CVE-2016-2804\u2014cause the browser to\ncrash; CVE-2016-2805 affects only Firefox ESR 38.8. \n\nAs for the high-severity vulnerabilities, one publicly disclosed by researchers at Newcastle\nUniversity in the U.K. affects only mobile versions of Firefox for Android. The researchers found\nthat they could use JavaScript with orientation data and motion sensors of the mobile browser to\ndisclose user actions on the device. \n\n\u201cThis allows an attacker to infer touch actions on the device through these sensors when orientation\nevents are triggered in the browser, compromising user privacy and including potentially revealing\nentered PIN code data along with other user activities,\u201d Mozilla said in its advisory. \n\nMozilla also patched a buffer overflow in libstagefright because of the way it handles CENC offsets\nand sizes table, and a use-after-free and buffer overflow flaws in Firefox\u2019s Service Workers. \n\nThe remaining high-severity bug was disclosed privately by the information security arm of the U.K.\nintelligence agency GCHQ. The flaw is that the .watch() JavaScript method could overflow the\nunderlying HashMap and allow an attacker to write to an invalid entry. \n\n\u201cUnder the right conditions this write could lead to arbitrary code execution,\u201d Mozilla said in its\nadvisory. \u201cThe overflow takes considerable time and a malicious page would require a user to keep it\nopen for the duration of the attack.\u201d \n\nMozilla also patched a handful of flaws it rated as moderate severity because they work only in non-\ndefault configurations, or require extra actions on the user\u2019s part to exploit. \n\n", "polarity": 0.002799999999999999, "subjectivity": 0.5531523809523808, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-add-on-flaw-leaves-apple-and-windows-computers-open-to-attack/117183/", "date": "2016-04-05T00:00:00.000Z", "author": "Tom Spring", "title": "Firefox Add-On Flaw Leaves Apple And Windows Computers Open To Attack", "body": "Researchers warn hundreds of popular Firefox browser extensions are vulnerable to attack that could\ngive hackers control of Mac OS X and Windows computers. \n\nResearchers from Northeastern University say the flaw is tied to Firefox\u2019s support for an older\nbrowser extension platform and the Mozilla Foundation\u2019s plug-in vetting process for its Firefox\nbrowser. Researchers presented their findings last week at Black Hat Asia. \n\n\u201cAttackers could write an extension that looks innocuous to anyone reviewing the plug-in. But once\nadded to the Firefox browser, the benign looking extension could easily exploit a second Firefox\nextension to plant malware on the user\u2019s computer,\u201d said William Robertson, assistant professor at\nNortheastern University and one of four researchers who discovered the vulnerability. \n\nIn a report \u201cCrossFire: An Analysis of Firefox Extension-Reuse Vulnerabilities\u201d researchers claim\n2,000 Firefox extensions \u2013 including nine\u00a0of the top 10 extensions \u2013 are exploitable via \u201cextension-\nreuse vulnerabilities.\u201d Researchers tested the desktop version of the Firefox browser running on Mac\nOS X and Windows platforms finding them both vulnerable. \n\n\u201cThe way add-ons are implemented in Firefox today allows for the scenario hypothesized and presented\nat Black Hat Asia,\u201d said Nick Nguyen, Mozilla\u00a0vice president\u00a0of product strategy,\u00a0in a statement to\nThreatpost. \u201cThe method described relies on a popular add-on that is vulnerable to be installed, and\nthen for the add-on that takes advantage of that vulnerability to also be installed.\u201d Nguyen said\nFirefox will start to sandbox Firefox extensions so that they cannot share code later this year. \n\nPrevalence of so-called reuse flaws outside the context of web browsers is not new, Robertson told\nThreatpost. \u201cWe have just never seen a reuse vulnerability exploited within a browser extension like\nthis,\u201d he said. \n\nNortheastern researchers said Firefox, unlike other browser extensions, does not isolate a browser\nadd-on\u2019s functions. That, researchers say, can allow an attacker to submit an extension through the\nMozilla Foundation\u2019s vetting processes that looks harmless. However, once installed the extension\ncan work independently and leverage a second Firefox browser extension to function in ways it was\nnever intended. That could allow an attacker to manipulate a second plug-in to allow the attacker to\ninstall malware on the Mac OS X or Windows computer. \n\n\u201cExtensions can often access private browsing information such as cookies, history and password\nstores, and also system-wide resources,\u201d researchers wrote. \u201cFor instance, Firefox exposes a rich\nAPI to its extensions through XPCOM (Cross Platform Component Object Model) that allows nearly\nunrestricted access to sensitive system resources such as the filesystem and network. Consequently,\nmalicious extensions, or attacks directed at legitimate extensions, pose a significant security risk\nto users.\u201d \n\nResearchers say the Firefox extension architecture allows JavaScript extensions installed on a Mac\nOS X or Windows system to share the same JavaScript namespace. That, it says, makes it possible for\nan extension to \u201cinvoke the functionality (or modify the state) of others.\u201d \n\nRobertson points to the reliance by Firefox on the older XPCOM framework, which does not isolate\nextensions, as the source of the problem. The Mozilla Foundation, he said, had planned to support\nthe more modern Jetpack framework-similar to Google Chrome and Microsoft Edge browsers\u2013that isolated\nextension modules from each other. \n\nInstead, Mozilla Foundation announced late last year\u00a0it would support the WebExtensions framework\nthat would allow for add-on compatibility between Chrome and the Opera browsers. That project is\nstill in progress. WebExtensions restricts browser add-ons modules interaction. Once the Mozilla\nFoundation announced plans to support WebExtensions, support for the Jetpack framework dwindled. \n\n\u201cBecause risks such as this one exist, we are evolving both our core product and our extensions\nplatform to build in greater security,\u201d Firefox\u2019s Nguyen told Threatpost. \u201cThe new set of browser\nextension APIs that make up\u00a0WebExtensions, which are available in Firefox today, are inherently more\nsecure than traditional add-ons, and are not vulnerable to the particular attack outlined in the\npresentation at Black Hat Asia. As part of our electrolysis initiative \u2013 our project to introduce\nmulti-process architecture to Firefox later this year \u2013 we will start to sandbox Firefox extensions\nso that they cannot share code.\u201d \n\nRobertson said that the Mozilla Foundation has been aware of Northeastern University\u2019s research for\n\u201csome time\u201d and since then has been more vigilant in its evaluation of Firefox add-ons submitted for\ninclusion for the browser. \n\n\u201cMalicious extensions that utilize this technique would be significantly more difficult to detect by\ncurrent static or dynamic analysis techniques, or extension vetting procedures,\u201d researchers wrote.\n\u201cThe malicious extension itself does not make any sensitive API calls or resource accesses, which\nallows the malicious behavior to stay hidden.\u201d \n\nResearchers say testing of extensions should require an analysis of how an extension candidate would\ninteract with all other Firefox extensions, making the vetting process arduous. Vetting, researchers\nwrote, \u201cwould require covering the code from the entire extension pool available to Firefox users\nsince the attack could utilize code from any and multiple extensions, which would considerably\nincrease the complexity of the analysis task.\u201d \n\nAs part of its analysis, researchers uploaded a proof-of-concept extension that passed a \u201cfully\nreviewed\u201d analysis. Robertson told Threatpost he is unaware of this exploit being used by malicious\nFirefox extensions. \n\n", "polarity": 0.08161045943304007, "subjectivity": 0.44557673509286405, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/12/botnet-enlists-firefox-users-to-hack-web-sites/", "date": "2013-12-16T00:00:00.000Z", "author": "Brian Krebs", "title": "Botnet Enlists Firefox Users to Hack Web Sites", "body": "An unusual botnet that has ensnared more than 12,500 systems disguises itself as a legitimate add-on\nfor Mozilla Firefox\u00a0and forces infected PCs to scour Web sites for security vulnerabilities, an\ninvestigation by KrebsOnSecurity has discovered.\n\nThe botnet, dubbed \u201cAdvanced Power\u201d by its operators, appears to have been quietly working since at\nleast May 2013. It\u2019s not clear yet how the initial infection is being spread, but the malware\nenslaves PCs in a botnet that conducts SQL injection attacks on virtually any Web sites visited by\nthe victim.\n\nSQL injection attacks take advantage of weak server configurations to inject malicious code into the\ndatabase behind the public-facing Web server. Attackers can use this access to booby-trap sites with\ndrive-by malware attacks, or force sites to cough up information stored in their databases.\n\nAlthough this malware does include a component designed to steal passwords and other sensitive\ninformation from infected machines, this feature does not appear to have been activated on the\ninfected hosts. Rather, the purpose of this botnet seems to be using the compromised Windows\ndesktops as a distributed scanning platform for finding exploitable Web sites. According to the\nbotnet\u2019s administrative panel, more than 12,500 PCs have been infected, and these bots in turn have\nhelped to discover at least 1,800 Web pages that are vulnerable to SQL injection attacks.\n\nThe malicious code comes from sources referenced in this Malwr writeup and this Virustotal entry\n(please don\u2019t go looking for this malware unless you really know what you\u2019re doing). On infected\nsystems with Mozilla Firefox installed, the bot code installs a browser plugin called \u201cMicrosoft\n.NET Framework Assistant\u201d (this bogus add-on does not appear to be the same thing\u00a0as this add-on by\nthe same name). The malicious add-on then tests nearly every page the infected user visits for the\npresence of several different SQL injection vulnerabilities.\n\nAlex Holden, chief information security officer at Hold Security LLC, said the botnet appears to\nhave been built to automate the tedious and sometimes blind guesswork involved in probing sites for\nSQL vulnerabilities.\n\n\u201cWhen you test an application for SQL injection or any other vulnerability, you have a small frame\nof reference as to the site\u2019s functionality,\u201d Holden said. \u201cYou often don\u2019t know or can\u2019t see many\nuser functions. And in some cases you need proper credentials to do it right.\u00a0In this case, the\nhackers are using valid requests within many sites that end-users themselves are feeding them.\u00a0This\nis a much bigger sample than you would normally get.\u00a0By no means it is a full regression test, but\nit is a deep and innovative approach.\u201d\n\nHolden said he believes the authors of this botnet may be natives of and/or reside in the Czech\nRepublic, noting that a few transliterated text strings in the malware are auto-detected by Google\nTranslate as Czech.\n\nSQL injections are some of the most common Web site attacks partly because these vulnerabilities are\nextremely widespread. According to a report (PDF) released earlier this year from Web site security\nfirm Imperva (full disclosure: Imperva is an advertiser on this site), while most Web applications\nreceive four or more attack campaigns each month, some Websites are constantly under attack \u2014\nparticularly Web apps at retail sites.\n\nBotnets like this one are a great and classic example of how compromised systems are nearly always\nused to chip away at the defenses of others online. Interestingly, there is a legitimate add-on for\nFirefox that can help passively detect SQL injection vulnerabilities on sites you visit. Site owners\nlooking for a free tool to scan their sites for SQL vulnerabilities should check out SQLmap, an open\nsource penetration testing tool.\n\nUpdate, 6:17 p.m. ET:\u00a0Mozilla has issued a statement saying that it has \u201cdisabled the fraudulent\nMicrosoft .NET Framework Assistant add-on used by the Advanced Power botnet,\u201d by adding the bogus\nadd-on to its block list. Mozilla said Firefox gets a message during a check for blocked add-ons\nonce a day \u2014 while the browser is running \u2014 and that the block does not require any user actions to\ntake effect.\n\n", "polarity": 0.07419871794871793, "subjectivity": 0.4729166666666667, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/08/firefox-zero-day-used-in-child-porn-hunt/", "date": "2013-08-04T00:00:00.000Z", "author": "Brian Krebs", "title": "Firefox Zero-Day Used in Child Porn Hunt?", "body": "A claimed zero-day vulnerability in Firefox 17 has some users of the latest Mozilla Firefox browser\n(Firefox 22) shrugging their shoulders. Indeed, for now it appears that this flaw is not a concern\nfor regular, up-to-date Firefox end users. But several experts say the vulnerability was instead\nexposed and used in tandem with a recent U.S. law enforcement effort to discover the true Internet\naddresses of people believed to be browsing child porn sites via the Tor Browser \u2014 an online\nanonymity tool powered by Firefox 17.\n\nTor software protects users by bouncing their communications across a distributed network of relays\nrun by volunteers all around the world. As the Tor homepage notes, it prevents anyone who might be\nwatching your Internet connection from learning what sites you visit, it prevents the sites you\nvisit from learning your physical location, and it lets users access sites that are blocked by\nInternet censors.\n\nThe Tor Browser bundle also is the easiest way to find Web sites that do not want to be easily taken\ndown, such as the Silk Road (a.k.a. the \u201ceBay of hard drugs\u201c) and sites peddling child pornography.\n\nOn Saturday, Aug. 3, 2013, Independent.ie, an Irish news outlet, reported\u00a0that U.S. authorities were\nseeking the extradition of Eric Eoin Marques, a 28-year-old with Irish and American citizenship\nreportedly dubbed by the FBI as \u201cthe largest facilitator of child porn on the planet.\u201d According to\nthe Independent, Marques was arrested on a Maryland warrant that includes charges of distributing\nand promoting child porn online.\n\nThe Tor Project\u2019s blog now carries a post noting that at approximately\u00a0midnight on August 4th \u201ca\nlarge number of hidden service addresses disappeared from the Tor Network, sites that appear to have\nbeen tied to an organization called Freedom Hosting \u2014\u00a0a hosting service run on the Tor Network\nallegedly by Marques.\n\nHidden services can be used to run a variety of Web services that are not directly reachable from a\nnormal Internet connection \u2014 from FTP and IRC servers to Web sites. As such, the Tor Network is a\nrobust tool for journalists, whistleblowers, dissidents and others looking to\u00a0publish information in\na way that is not easily traced back to them.\n\n\u201cThere are rumors that a hosting company for hidden services is suddenly offline and/or has been\nbreached and infected with a javascript exploit,\u201d writes \u201cphobos,\u201d a Tor Project blogger. Phobos\nnotes that the person, or persons, who run Freedom Hosting are in no way affiliated or connected to\nThe Tor Project, Inc., the organization coordinating the development of the Tor software and\nresearch, and continues:\n\nEven if the claimed vulnerability is limited to Firefox version 17, such a flaw would impact far\nmore than just Tor bundle users. Mozilla says it has been notified of a potential security\nvulnerability in Firefox 17, which is currently the extended support release (ESR) version of\nFirefox. Last year, Mozilla began offering an annual ESR of Firefox for enterprises and others who\ndidn\u2019t want to have to keep up with the browser\u2019s new rapid release cycle.\n\n\u201cWe are actively investigating this information and we will provide additional information when it\nbecomes available,\u201d Michael Coates, director of security assurance at Mozilla, wrote in a\u00a0brief blog\npost\u00a0this evening.\n\nOfir David, head of intelligence for Israeli cybersecurity firm Cyberhat, said he believes the now-\npublic exploit code is indeed related to Marques\u2019 arrest. \u00a0David said someone appears to have gained\naccess to Freedom Hosting and injected malicious HTML code that checks the visitor\u2019s browser to see\nif he is using Firefox 17. If so, the code silently redirects that visitor\u2019s browser to another site\nwhich generates a unique identifier called a \u2018UUID.'\u201d\n\nDavid said that although the exploit can be used to download and run malicious code on the visitor\u2019s\ncomputer, whoever infiltrated Freedom Hosting appear to have only used the exploit to gather the\ntrue Internet addresses of people visiting the child porn sites hosted there.\n\n\u201cIronically, all [the malicious code] does is perform a GET request to a new domain, which is hosted\noutside of the Tor network, while transferring the same UUID,\u201d David said. \u201cThat way, whoever is\nrunning this exploit can match any Tor user to his true Internet address, and therefore track down\nthe Tor user.\u201d\n\nFor more on this developing story, check out this Reddit thread. Also, Mozilla has an open Bugzilla\nentry\u00a0analyzing the exploit code.\n\nUpdate, Aug. 5, 1:45 a.m. ET: Reverse engineer Vlad Tsrklevich\u00a0has posted a brief analysis of what\nthe exploit does. His conclusion (which seems sound): \u00a0\u201cBecause this payload does not download or\nexecute any secondary backdoor or commands it\u2019s very likely that this is being operated by an [law\nenforcement agency] and not by blackhats.\u201d\n\nAlso, here\u2019s a bit more from Mozilla\u2019s security lead Dan Veditz on the vulnerability:\n\n\u201cThe vulnerability being exploited by this attack was fixed in Firefox 22 and Firefox ESR 17.0.7.\nThe vulnerability used is\u00a0MFSA 2013-53\n\nPeople who are on the latest supported versions of Firefox are not at risk.\n\nAlthough the vulnerability affects users of Firefox 21 and below the exploit targets only ESR-17\nusers. Since this attack was found on Tor hidden services presumably that is because the Tor Browser\nBundle (TBB) is based on Firefox ESR-17. Users running the most recent TBB have all the fixes that\nwere applied to Firefox ESR 17.0.7 and were also not at risk from this attack.\u201d\n\nUpdate, Aug. 5, 4:08 p.m., ET: Kevin Poulsen from Wired.com notes that, according to a\ndomaintools.com lookup, the IP address used by the malicious script\u2019s controllers found by\nTsrklevich resolves to a Verizon address space that is managed by Science Applications International\nCorp. (SAIC), an American defense contractor headquartered in Tysons Corner, Va.\n\n", "polarity": 0.05699189699189699, "subjectivity": 0.40953452530375595, "_cls": "CyberSpiders.articlemodel.Article"}]